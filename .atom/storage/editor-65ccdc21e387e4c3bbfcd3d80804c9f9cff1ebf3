{"version":1,"windowDimensions":{"x":65,"y":24,"width":1855,"height":1056,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/home/andy"],"buffers":[{"id":"8f352b1fc752363865c87f015912b814","text":"# fix bug with atheros network card\n# http://askubuntu.com/questions/678145/my-wifi-qualcomm-atheros-device-168c0041-rev-20-doesnt-show-up-and-work-in\n# fix gulp watch error\n# echo fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n\n# include custom scripts\nPATH=$PATH:~/opt/bin\n\n# Greet me with a triforce and other stuff\necho -e \"\\e[1;93m           /\\            \"\necho -e \"          /  \\           \"\necho -e \"         /    \\          \"\necho -e \"        /      \\         \"\necho -e \"       /        \\        \"\necho -e \"      /__________\\       \"\necho -e \"     /\\__________/\\      \"\necho -e \"    /  \\        /  \\     \"\necho -e \"   /    \\      /    \\    \"\necho -e \"  /      \\    /      \\   \"\necho -e \" /        \\  /        \\  \"\necho -e \"/__________\\/__________\\ \"\necho -e \"\\__________/\\__________/ \"\necho -e \"\\e[0m\"\necho \"Welcome, $USER! It's $(date).\"\necho \"You're logged in at $(hostname), using $OSTYPE.\"\necho; echo\n\n# Load git completions\ngit_completion_script=/usr/local/etc/bash_completion.d/git-completion.bash\ntest -s $git_completion_script && source $git_completion_script\n\n# enable programmable completion features (you don't need to enable\n# this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n# sources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\n\n\n# A more colorful prompt\n# resets the color to default color\nc_reset='\\[\\e[0m\\]'\nco_white='\\e[0m'\n# sets the color to purple\nc_purple='\\[\\e[1;35m\\]'\n# sets the color to cyan\nc_cyan='\\[\\e[1;36m\\]'\n# sets the color to yellow\nc_yellow='\\[\\e[0;93m\\]'\n# sets the color to green\nc_green='\\[\\e[1;32m\\]'\n# sets the color to red\nc_red='\\[\\e[1;31m\\]'\nco_red='\\e[0;31m'\n\ngems=\"${c_red}💎${c_green}💎${c_cyan}💎${c_purple}💎\"\nchristmas=\"${c_red}🎁 ${c_green}🎁\"\nhalloween=\"\\[\\e[0;31;40m\\]🎃 \\[\\e[0;0;40m\\]👻\"\nnew_years_eve=\"${c_cyan}🎉 ${c_yellow}🎊\"\ncinco_de_mayo=\"${c_yellow}🍺${c_green}🍸${c_red}🍷\"\nst_patricks_day=\"${c_green}🍀 ${c_yellow}🍺\"\nbirthday=\"${c_green}🎁 ${c_cyan}🎂 ${c_red}🎈\"\nvalentines=\"${c_reset}💙${c_red}💙${c_purple}💙\"\n\nprompt=\"$gems\"\n[[ $(date +%e) = 14 && $(date +%m) = 2  ]] && prompt=\"$valentines\"\n[[ $(date +%e) = 17 && $(date +%m) = 3  ]] && prompt=\"$st_patricks_day\"\n[[ $(date +%e) = 5  && $(date +%m) = 5  ]] && prompt=\"$cinco_de_mayo\"\n[[ $(date +%e) = 22 && $(date +%m) = 8  ]] && prompt=\"$birthday\"\n[[ $(date +%e) = 31 && $(date +%m) = 10 ]] && prompt=\"$halloween\"\n[[ $(date +%e) = 25 && $(date +%m) = 12 ]] && prompt=\"$christmas\"\n[[ $(date +%e) = 31 && $(date +%m) = 12 ]] && prompt=\"$new_years_eve\"\n\n# PROMPT_COMMAND is a variable whose value is some code that gets evaluated each time the prompt awaits input\n# PS1 is the variable for the prompt you see when terminal is awaiting input\nPROMPT_COMMAND='PS1=\"$(venv)$(format_pwd)$(git_prompt) ${prompt} ${c_reset} \"; \\\n                echo -ne \"\\033]2;${PWD/#${HOME}/\\~}\\007\" '\nexport PS2='... '\n\nformat_pwd() {\n  wd=$(pwd)\n  short_wd=${wd/\\/home\\/andy/\\~}\n  first_char=$(echo $short_wd | cut -c 1-1)\n  if [[ $first_char != '~' ]]; then\n    short_wd=\"${c_reset}\\e[0;0;40m💀 ${c_purple}${short_wd}${c_reset}\"\n  fi\n  echo -e \"${c_purple}${short_wd}\"\n}\n\nvenv() {\n  if [[ $VIRTUAL_ENV ]]; then\n    echo -e \"\\[\\e[0;32m\\]🐍 \"\n  fi\n}\n\n\n# determines if the git branch you are on is clean or dirty and colors accordingly\ngit_prompt() {\n  if ! git rev-parse --git-dir > /dev/null 2>&1; then\n    return 0\n  fi\n  # Grab working branch name\n  branch=$(__git_ps1)\n  # Clean or dirty branch\n  if [[ $(git diff) ]]; then\n    git_icon=\"${c_red}✗\"\n  elif [[ $(git status --short) ]]; then\n    git_icon=\"${c_yellow}📤\"\n  else\n    git_icon=\"${c_green}✓\"\n  fi\n  echo \"${c_cyan}${branch:0:-1}${git_icon}${c_cyan})${c_reset}\"\n}\n\n# Colors ls should use for folders, files, symlinks etc, see `man ls` and\n# search for LSCOLORS\nexport LSCOLORS=ExGxFxdxCxDxDxaccxaeex\n\n# Force grep to always use the color option and show line numbers\nexport GREP_OPTIONS='--color=always'\n\n# Set sublime as the default editor\n[[ $(which subl) ]] && export EDITOR=\"subl --wait\"\n[[ $(which atom) ]] && export EDITOR=atom\n\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n  test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n  alias ls='ls --color=auto'\n  alias dir='dir --color=auto'\n  alias vdir='vdir -A --color=auto'\n\n  alias grep='grep --color=auto'\n  alias fgrep='fgrep --color=auto'\n  alias egrep='egrep --color=auto'\nfi\n\n# Alias definitions.\nif [ -f ~/.bash_aliases ]; then\n  . ~/.bash_aliases\nfi\n\ncd() { builtin cd \"$@\"; ll; }\npushd() { builtin pushd \"$@\"; ll; }\nmkcd() { mkdir -p \"$1\" && cd \"$1\"; }\ntrash() { command mv \"$@\" ~/.local/share/Trash/files/ ; }\nte() { touch \"$1\"; e \"$1\"; }\n# requires espeak\nsay() { echo \"$1\" | espeak; }\no() {\n  xdg-open \"$1\" >/dev/null 2>&1 &\n}\nkeys() {\n  openssl genrsa -out key.pem &&\n  openssl req -new -key key.pem -out csr.pem &&\n  openssl x509 -req -days 9999 -in csr.pem -signkey key.pem -out cert.pem &&\n  rm csr.pem\n}\n\n\n#full recursive directory listing\nalias lr='ls -R | grep \":$\" | sed -e '\\''s/:$//'\\'' -e '\\''s/[^-][^\\/]*\\//--/g'\\'' -e '\\''s/^/   /'\\'' -e '\\''s/-/|/'\\'' | less'\n\n#extract most known archives\nextract() {\n  if [ -f $1 ] ; then\n    case $1 in\n      *.tar.xz)    tar xvfJ $1    ;;\n      *.tar.bz2)   tar xjf $1     ;;\n      *.tar.gz)    tar xzf $1     ;;\n      *.bz2)       bunzip2 $1     ;;\n      *.rar)       unrar e $1     ;;\n      *.gz)        gunzip $1      ;;\n      *.tar)       tar xf $1      ;;\n      *.tbz2)      tar xjf $1     ;;\n      *.tgz)       tar xzf $1     ;;\n      *.zip)       unzip $1       ;;\n      *.Z)         uncompress $1  ;;\n      *.7z)        7z x $1        ;;\n      *)     echo \"'$1' cannot be extracted via extract()\" ;;\n    esac\n  else\n    echo \"'$1' is not a valid file\"\n  fi\n}\n\n\n# Add an \"alert\" alias for long running commands.  Use like so:\n#   sleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\\'')\"'\n\n\n#   ----------------\n#   NETWORKING\n#   ----------------\n\nalias myip='curl ip.appspot.com'                    # myip:         Public facing IP Address\nalias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets\nalias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache\nalias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets\nalias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets\nalias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets\nalias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0\nalias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1\nalias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections\nalias showBlocked='sudo ipfw list'                  # showBlocked:  All ipfw rules inc/ blocked IPs\n\n\nexport PYTHONSTARTUP=$HOME/.pythonrc.py\n\n# added by travis gem\n[ -f /home/andy/.travis/travis.sh ] && source /home/andy/.travis/travis.sh\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{"2":{"range":{"start":{"row":47,"column":20},"end":{"row":47,"column":26}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"3":{"range":{"start":{"row":49,"column":20},"end":{"row":49,"column":24}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"4":{"range":{"start":{"row":51,"column":20},"end":{"row":51,"column":26}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"5":{"range":{"start":{"row":53,"column":20},"end":{"row":53,"column":25}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"},"6":{"range":{"start":{"row":55,"column":20},"end":{"row":55,"column":23}},"properties":{"type":"pigments-color"},"reversed":false,"tailed":true,"valid":true,"invalidate":"touch"}},"version":2}},"nextMarkerLayerId":4,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/.bashrc","digestWhenLastPersisted":"63a02c1683fb5640bad1f9195e0aac4bdee72cc5","preferredLineEnding":null,"nextMarkerId":7,"deserializer":"TextBuffer","version":5},{"id":"ae10210ef0cb4d1f158af1d56ae762d9","text":"# coding=utf-8\nimport sys\n\nsys.ps1 = '\\033[32m🐍 >> \\033[0m'\nsys.ps2 = '...  '\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":4,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/.pythonrc.py","digestWhenLastPersisted":"af1d331939a673264b980bcf57267188bdd15ba0","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":81,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/.bashrc","bufferId":"8f352b1fc752363865c87f015912b814","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":28,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":29,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/.pythonrc.py","bufferId":"ae10210ef0cb4d1f158af1d56ae762d9","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/home/andy/.bashrc","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-shellscript","language-python","language-hyperlink","language-todo"],"destroyedItemURIs":["/home/andy/.jshintrc","/home/andy/.mongorc.js","/home/andy/.psql_history-template1","/home/andy/.psqlrc","/home/andy/.lesshst","/home/andy/.dmrc","/home/andy/.dbshell"]},"packageStates":{"fuzzy-finder":{"/home/andy/.bashrc":1453840080945,"/home/andy/.pythonrc.py":1452735467456},"metrics":{"sessionLength":392270},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/andy":{"isExpanded":true,"entries":{".adobe":{"isExpanded":false,"entries":{}},".atom":{"isExpanded":false,"entries":{}},".cache":{"isExpanded":false,"entries":{}},".compiz":{"isExpanded":false,"entries":{}},".config":{"isExpanded":false,"entries":{}},".conky":{"isExpanded":false,"entries":{}},".dbus":{"isExpanded":false,"entries":{}},".gconf":{"isExpanded":false,"entries":{}},".git-credential-cache":{"isExpanded":false,"entries":{}},".gnome":{"isExpanded":false,"entries":{}},".local":{"isExpanded":false,"entries":{}},".macromedia":{"isExpanded":false,"entries":{}},".mozilla":{"isExpanded":false,"entries":{}},".npm":{"isExpanded":false,"entries":{}},".pki":{"isExpanded":false,"entries":{}},"Desktop":{"isExpanded":false,"entries":{}},"Documents":{"isExpanded":false,"entries":{}},"Downloads":{"isExpanded":false,"entries":{}},"Music":{"isExpanded":false,"entries":{}},"opt":{"isExpanded":false,"entries":{}},"Pictures":{"isExpanded":false,"entries":{}},"Public":{"isExpanded":false,"entries":{}},"Templates":{"isExpanded":false,"entries":{}},"tmp":{"isExpanded":false,"entries":{}},"Videos":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/andy/.bashrc","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":187,"width":247},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-01-26T20:28:05.154Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/home/andy/.bashrc","colorMarkers":[{"markerId":"2","bufferRange":[[47,20],[47,26]],"color":[128,0,128,1],"text":"purple","variables":[]},{"markerId":"3","bufferRange":[[49,20],[49,24]],"color":[0,255,255,1],"text":"cyan","variables":[]},{"markerId":"4","bufferRange":[[51,20],[51,26]],"color":[255,255,0,1],"text":"yellow","variables":[]},{"markerId":"5","bufferRange":[[53,20],[53,25]],"color":[0,128,0,1],"text":"green","variables":[]},{"markerId":"6","bufferRange":[[55,20],[55,23]],"color":[255,0,0,1],"text":"red","variables":[]}]},"28":{"id":28,"path":"/home/andy/.pythonrc.py","colorMarkers":[]}}}},"find-and-replace":{"findOptions":{"findPattern":"","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":[],"replaceHistory":[],"pathsHistory":[]}},"fullScreen":false}