{"version":1,"windowDimensions":{"x":65,"y":24,"width":1855,"height":1056,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/home/andy/Documents/projects/wordasaurus-js"],"buffers":[{"text":"// newSchema.pre('remove', function(next) {\n//   var doc = this;\n//   console.log(this.schema.paths.user.options.ref)\n//   this.model('User').update(\n//     { _id: doc.user }, \n//     { $pull: { documents: doc._id } }, \n//     {},\n//     next\n//   );\n// });\n\nfunction whenA(model) {\n  var paths = model.schema.paths;\n  return {\n    isDeleted: {\n\n      removeItFromIts: function(associatedModelName) {\n        model.schema.pre('remove', function(next) {\n          var thisDoc = this;\n          var associatedModel = this.model(associatedModelName);\n          var associatedSchema = associatedModel.schema;\n          for (var key in paths) {\n            if (paths[key].options.ref === associatedModelName) {\n              for (var aKey in associatedSchema.paths) {\n                var path = associatedSchema.paths[aKey];\n                if (\n                  path.options.type.constructor === Array && \n                  path.options.type[0].ref === model.modelName\n                ) {\n                  var pullObj = {};\n                  pullObj[path.path] = thisDoc._id;\n                  this.model(associatedModelName).update(\n                    { _id: thisDoc[key] },\n                    { $pull: pullObj },\n                    {},\n                    next\n                  );\n                } \n              }\n            }\n          }\n        });\n      },\n\n\n// userSchema.pre('remove', function(next) {\n//   var user = this;\n//   this.model('Document').remove({ _id: { $in: user.documents } }, next);\n// });\n\n      removeIts: function(associatedModelName, isPlural) {\n        if (isPlural) {\n          model.schema.pre('remove', function(next) {\n            var thisDoc = this;\n            var associatedModel = this.model(associatedModelName);\n            for (var key in paths) {\n              if(\n                paths[key].options.type[0] &&\n                paths[key].options.type[0].ref === associatedModelName\n              ) {\n                associatedModel.remove({ _id: { $in: thisDoc[paths[key].path] } }, next);\n              }            //  .remove({ _id: { $in: user.documents } }, next);\n            }\n          });\n        } else {\n          \n        }\n      }\n\n    }\n  };\n}\n\nmodule.exports = whenA;","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":0,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/mongoose-hooker.js","digestWhenLastPersisted":"f93132010caef4875916ce41eab7f02b35537eb6","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"var env = process.env;\nif (env.NODE_ENV === 'development' || env.NODE_ENV === 'test') {\n  require('dotenv').load({ path: `${__dirname}/../.env.${env.NODE_ENV}` });\n}\n\nvar express = require('express');\nvar app = express();\nvar path = require('path');\n\nvar userCtrl = require('./controllers/users-controller');\nvar seshCtrl = require('./controllers/sessions-controller');\nvar docsCtrl = require('./controllers/documents-controller');\n\nvar bodyParser = require('body-parser');\n\n\napp.use(bodyParser.json());\napp.use('/', express.static(path.resolve(__dirname + '/../public')));\n\napp.post('/users', userCtrl.create, seshCtrl.create);\napp.post('/sessions', userCtrl.find, seshCtrl.create);\n\napp.get('/documents', seshCtrl.verify, docsCtrl.index);\napp.get('/documents/:id', seshCtrl.verify, docsCtrl.show);\napp.post('/documents', seshCtrl.verify, docsCtrl.create);\n\nvar port = env.PORT || 3000;\napp.listen(port, console.log.bind(console, 'listening at http://localhost:' + port)); ","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":0,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/server/server.js","digestWhenLastPersisted":"97ecbc36af95f63339aee07f1e76480b0dbb4f01","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"var mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nif (mongoose.connection.readyState === 0) {\n  mongoose.connect(require('./connection-string'));\n}\n\nvar bcrypt = require('bcrypt-nodejs');\nvar whenA = require('../mongoose-hooker');\n\nvar userSchema = new Schema({\n  'email': { type: String, required: true, index: { unique: true } },\n  'password': { type: String, required: true },\n  'documents': [{ type: Schema.Types.ObjectId, ref: 'Document' }],\n  'createdAt': { type: Date, default: Date.now },\n  'updatedAt': { type: Date, default: Date.now }\n});\n\n\nuserSchema.pre('save', function(next){\n  this.updatedAt = Date.now();\n  next();\n});\n\nuserSchema.pre('update', function() {\n  this.update({}, { $set: { updatedAt: Date.now() } });\n});\n\nuserSchema.pre('findOneAndUpdate', function() {\n  this.update({}, { $set: { updatedAt: Date.now() } });\n});\n\n\nuserSchema.pre('save', function(next) {\n  var record = this;\n\n  // only hash if it has been modified (or is new)\n  if (!record.isModified('password')) return next();\n\n  // hash the password using our new salt\n  bcrypt.hash(record['password'], null, null, function(err, hash) {\n    if (err) return next(err);\n    record['password'] = hash;\n    next();\n  });\n});\n\nuserSchema.methods['passwordCompare'] = function(attempt, next) {\n  bcrypt.compare(attempt, this['password'], function(err, isMatch) {\n    if (err) return next(err);\n    next(null, isMatch);\n  });\n};\n\nuserSchema.methods.toJSON = function() {\n  var user = this.toObject();\n  delete user.password;\n  return user;\n};\n\n\nuserSchema.path('email').validate(function (email) {\n   var emailRegex = /^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/;\n   return emailRegex.test(email); \n}, 'The email is improperly formatted.');\n\n\nvar User = mongoose.model('User', userSchema);\n\nwhenA(User).isDeleted.removeIts('Document', 's');\n\nmodule.exports = User;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":48,"id":"0","maintainHistory":false,"markersById":{"0-44":{"range":{"start":{"row":39,"column":0},"end":{"row":39,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"0-45":{"range":{"start":{"row":41,"column":0},"end":{"row":41,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"0-46":{"range":{"start":{"row":46,"column":0},"end":{"row":46,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"0-47":{"range":{"start":{"row":47,"column":0},"end":{"row":47,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":53,"column":10},"end":{"row":53,"column":10}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/models/User.js","digestWhenLastPersisted":"6d1a400a8c56127f2e3b1e96bf36e889cd0455c2","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"var mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\nif (mongoose.connection.readyState === 0) {\n  mongoose.connect(require('./connection-string'));\n}\n\nvar whenA = require('../mongoose-hooker');\n\nvar newSchema = new Schema({\n  'title': { type: String, required: true },\n  'body': { type: String, default: '' },\n  'wordCount': { type: Number, default: 0 },\n  'preview': { type: String },\n  'user': { type: Schema.Types.ObjectId, ref: 'User', required: true },\n  'createdAt': { type: Date, default: Date.now },\n  'updatedAt': { type: Date, default: Date.now }\n});\n\nnewSchema.pre('save', function(next){\n  this.updatedAt = Date.now();\n  try {\n    this.wordCount = this.body.match(/\\w+/g).length;\n  } catch(err) {\n    this.wordCount = 0;\n  }\n  this.preview = this.body.slice(0, 300);\n  next();\n});\n\nnewSchema.post('save', function(doc) {\n  this.model('User').findOneAndUpdate({ _id: doc.user }, { $addToSet: { documents: doc._id } })\n  .exec(function(err, user) {\n    if (err) console.error(err);\n  });\n});\n\nnewSchema.pre('update', function() {\n  this.update({}, { $set: { updatedAt: Date.now() } });\n});\n\nnewSchema.pre('findOneAndUpdate', function() {\n  this.update({}, { $set: { updatedAt: Date.now() } });\n});\n\n\nvar Document = mongoose.model('Document', newSchema);\n\nwhenA(Document).isDeleted.removeItFromIts('User');\n\nmodule.exports = Document;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":3,"id":"0","maintainHistory":false,"markersById":{"0-2":{"range":{"start":{"row":31,"column":0},"end":{"row":31,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/models/Document.js","digestWhenLastPersisted":"a0b9201f6295b40d75898dfd54c411aede513f8f","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"var env = process.env;\nif (env.NODE_ENV === 'development' || env.NODE_ENV === 'test') {\n  require('dotenv').load({ path: `${__dirname}/../.env.${env.NODE_ENV}` });\n}\n\nvar uri = process.env.MONGO;\n\nif (!uri) throw new Error('\\033[31mYou need to provide the connection string. \\\nYou can open \"models/connection-string.js\" and export it or use the \"setUri\" command.\\033[0m');\nelse {\n  var cmd = uri.match(/^mongodb:\\/\\/(\\w+):(.*?)@(.*?):(\\d+)\\/(\\w+)$/);\n  if (!cmd) throw new Error('\\033[31m Improperly formatted URI: \\033[0m' + uri);\n}\nmodule.exports = uri;","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":5,"id":"0","maintainHistory":false,"markersById":{"0-4":{"range":{"start":{"row":7,"column":0},"end":{"row":7,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/models/connection-string.js","digestWhenLastPersisted":"eeb96854fd1a4e7e51b428b5b10fcfab7d80d4e1","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"var fs = require('fs');\n\n//require all the models \nvar models = {};\nvar names = fs.readdirSync('./models');\n\nnames.forEach(name => {\n  if (!name.match(/\\.js$/)) return;\n  if (name === 'connection-string.js' || name === 'all-models.js') return;\n  var model = require('./' + name);\n  models[model.modelName] = model;\n});\n\n// define non-enumerable method to place each model onto an object. primarily for making them global\nObject.defineProperty(models.__proto__, 'toContext', {\n  enumerable: false,\n  value: function(context) {\n    for (var name in this) {\n      context[name] = this[name]; \n    }\n    return context;\n  }\n});\n \n\nmodule.exports = models;","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":3,"id":"0","maintainHistory":false,"markersById":{"0-2":{"range":{"start":{"row":14,"column":0},"end":{"row":14,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/models/all-models.js","digestWhenLastPersisted":"792ed76f417d4485b14c75abaf0df3a21920999f","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"CLIENT_SECRET=\"CeLTNR9dfDxL8UDhACgUlHAL\"\nCLIENT_ID=\"844135534062-3890a4m30b90mdu0uh80ajf4h8qdggls.apps.googleusercontent.com\"\nMONGO=\"mongodb://andy:corn@localhost:27017/wordasaurus\"","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":2,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/.env.development","digestWhenLastPersisted":"c94e849343e66ef44ff6fbcf2c2b46a1f7ca6206","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"public/build/\nnode_modules/\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":0,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/.gitignore","digestWhenLastPersisted":"c3be6cd7f54c4e72d0a7ac128e1c72495be57a79","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"var gulp = require('gulp');\nvar browserify = require('browserify');\nvar sass = require('gulp-sass');\nvar nodemon = require('gulp-nodemon');\nvar source = require('vinyl-source-stream');\nvar watchify = require('watchify');\nvar notify = require('gulp-notify');\nvar rename = require('gulp-rename');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('default', ['script-dev', 'sass-dev', 'sass-watch', 'serve']);\ngulp.task('build', ['script', 'sass']);\n\ngulp.task('serve', () => {\n  nodemon({\n    script: 'server/server.js',\n    ext: 'js',\n    watch: ['server/', 'public/', 'models/'],\n    env: {\n      NODE_ENV: 'development'\n    }\n  });\n});\n\ngulp.task('sass-dev', () => {\n  gulp.src('src/sass/main.scss')\n    .pipe(sourcemaps.init())\n    .pipe(sass().on('error', sass.logError))\n    .pipe(rename('bundle.css'))\n    .pipe(sourcemaps.write())\n    .pipe(gulp.dest('public/build/'));\n});\n\ngulp.task('sass-watch', () => {\n  gulp.watch('src/sass/*.scss', ['sass-dev']);\n});\n\ngulp.task('sass', () => {\n  gulp.src('src/sass/main.scss')\n    .pipe(sass({ outputStyle: 'compressed' }).on('error', sass.logError))\n    .pipe(rename('bundle.css'))\n    .pipe(gulp.dest('public/build/'));\n});\n\ngulp.task('script-dev', () => buildScript('main.js', true));\ngulp.task('script', () => buildScript('main.js', false));\n\nfunction buildScript(file, watch) {\n\n  var props = {\n    entries : ['src/js/' + file],\n    debug : true,\n    transform: [\n      ['babelify', { presets: ['es2015'] }],\n    ],\n  };\n\n  var bundler;\n  if (watch) {\n    bundler = watchify(browserify(props));\n  } else {\n    bundler = browserify(props).transform({\n      global: true\n    }, 'uglifyify');\n  }\n\n  function rebundle(){\n    var stream = bundler.bundle();\n    return stream\n      .on('error', handleErrors)\n      .pipe(source('bundle.js'))\n      .pipe(gulp.dest('public/build/'));\n  }\n\n  bundler.on('update', function() {\n    var now = new Date;\n    var updateStart = now.valueOf();\n    var time = '\\033[30m' + `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}` + '\\033[0m';\n    rebundle();\n    console.log('[' + time + '] \\033[32m[watchify] Updated!', (Date.now() - updateStart) + 'ms\\033[0m');\n  });\n\n  // run it once the first time buildScript is called\n  return rebundle();\n}\n\nfunction handleErrors() {\n  notify.onError({\n    title : 'Compile Error',\n    message : '<%= error.message %>'\n  }).apply(this, arguments);\n\n  this.emit('end'); //keeps gulp from hanging on this task\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":44,"id":"0","maintainHistory":false,"markersById":{"0-41":{"range":{"start":{"row":75,"column":0},"end":{"row":75,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"0-42":{"range":{"start":{"row":80,"column":0},"end":{"row":81,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"0-43":{"range":{"start":{"row":93,"column":0},"end":{"row":94,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":81,"column":0},"end":{"row":81,"column":0}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":3,"undoStack":[{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[80,4],[80,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[80,4],[80,4]],"newRange":[[80,4],[80,5]],"oldText":"","newText":";"}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[80,5],[80,5]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[81,0],[81,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[93,1],[93,1]],"newRange":[[93,1],[94,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[81,0],[81,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/gulpfile.js","digestWhenLastPersisted":"a6db7f2cddde05a5c18a1dbb4bb100a8e0490088","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"{\n  \"name\": \"wordasaurus-js\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Web-based text-editting enviroment to help improve your writing and expand your vocabulary.\",\n  \"main\": \"server/server.js\",\n  \"engines\": {\n    \"node\": \"4.2\"\n  },\n  \"scripts\": {\n    \"start\": \"gulp build && node server/server.js\",\n    \"start-dev\": \"gulp\",\n    \"test\": \"export NODE_ENV=test; mocha -t 10000\"\n  },\n  \"author\": \"Andrew Carlson <acarl005@g.ucla.edu> (https://github.com/acarl005)\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {},\n  \"dependencies\": {\n    \"angular\": \"^1.4.7\",\n    \"angular-animate\": \"^1.4.7\",\n    \"angular-ui-router\": \"^0.2.15\",\n    \"babel-preset-es2015\": \"^6.1.18\",\n    \"babelify\": \"^7.2.0\",\n    \"bcrypt-nodejs\": \"0.0.3\",\n    \"body-parser\": \"^1.14.1\",\n    \"bootstrap\": \"^3.3.5\",\n    \"browserify\": \"^12.0.1\",\n    \"chai\": \"^3.4.1\",\n    \"dotenv\": \"^1.2.0\",\n    \"express\": \"^4.13.3\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-nodemon\": \"^2.0.4\",\n    \"gulp-notify\": \"^2.2.0\",\n    \"gulp-rename\": \"^1.2.2\",\n    \"gulp-sass\": \"^2.1.0\",\n    \"gulp-sourcemaps\": \"^1.6.0\",\n    \"jquery\": \"^2.1.4\",\n    \"jwt-simple\": \"^0.3.1\",\n    \"mocha\": \"^2.3.4\",\n    \"mongoose\": \"^4.2.6\",\n    \"passport\": \"^0.3.2\",\n    \"passport-local\": \"^1.0.0\",\n    \"uglifyify\": \"^3.0.1\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"watchify\": \"^3.6.1\"\n  }\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":4,"id":"0","maintainHistory":false,"markersById":{"0-2":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"0-3":{"range":{"start":{"row":45,"column":0},"end":{"row":45,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/projects/wordasaurus-js/package.json","digestWhenLastPersisted":"705edc5e9f7e4f7fa7593bc7331823c84d42e01e","preferredLineEnding":null,"deserializer":"TextBuffer","version":4}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":49,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/mongoose-hooker.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":28,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":29,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/.env.development","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":32,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":33,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/.gitignore","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":36,"softTabs":true,"firstVisibleScreenRow":59,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":37,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/gulpfile.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":40,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":41,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/package.json","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/server/server.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":12,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":13,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/models/User.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":16,"softTabs":true,"firstVisibleScreenRow":26,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":17,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/models/Document.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":20,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":21,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/models/connection-string.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":24,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":25,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/projects/wordasaurus-js/models/all-models.js","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/home/andy/Documents/projects/wordasaurus-js/package.json","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-javascript","language-json","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-01-09T19:50:58.248Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/home/andy/Documents/projects/wordasaurus-js/mongoose-hooker.js","colorMarkers":[]},"8":{"id":8,"path":"/home/andy/Documents/projects/wordasaurus-js/server/server.js","colorMarkers":[]},"12":{"id":12,"path":"/home/andy/Documents/projects/wordasaurus-js/models/User.js","colorMarkers":[]},"16":{"id":16,"path":"/home/andy/Documents/projects/wordasaurus-js/models/Document.js","colorMarkers":[]},"20":{"id":20,"path":"/home/andy/Documents/projects/wordasaurus-js/models/connection-string.js","colorMarkers":[]},"24":{"id":24,"path":"/home/andy/Documents/projects/wordasaurus-js/models/all-models.js","colorMarkers":[]},"28":{"id":28,"path":"/home/andy/Documents/projects/wordasaurus-js/.env.development","colorMarkers":[]},"32":{"id":32,"path":"/home/andy/Documents/projects/wordasaurus-js/.gitignore","colorMarkers":[]},"36":{"id":36,"path":"/home/andy/Documents/projects/wordasaurus-js/gulpfile.js","colorMarkers":[]},"40":{"id":40,"path":"/home/andy/Documents/projects/wordasaurus-js/package.json","colorMarkers":[]}},"paths":["/home/andy/Documents/projects/wordasaurus-js/src/sass/_alert.scss","/home/andy/Documents/projects/wordasaurus-js/src/sass/_home.scss","/home/andy/Documents/projects/wordasaurus-js/src/sass/_ng-animate.scss","/home/andy/Documents/projects/wordasaurus-js/src/sass/_sign-form.scss","/home/andy/Documents/projects/wordasaurus-js/src/sass/animate.scss","/home/andy/Documents/projects/wordasaurus-js/src/sass/bootstrap.scss","/home/andy/Documents/projects/wordasaurus-js/src/sass/main.scss"],"variables":{"deserializer":"VariablesCollection","content":[{"name":"$red","value":"#B94A48","path":"/home/andy/Documents/projects/wordasaurus-js/src/sass/main.scss","range":[0,13],"line":0,"isColor":true,"color":[185,74,72,1],"variables":[]},{"name":"$light-blue","value":"#3399F3","path":"/home/andy/Documents/projects/wordasaurus-js/src/sass/main.scss","range":[15,35],"line":1,"isColor":true,"color":[51,153,243,1],"variables":[]}]}}},"fuzzy-finder":{"/home/andy/Documents/projects/wordasaurus-js/mongoose-hooker.js":1452368848784,"/home/andy/Documents/projects/wordasaurus-js/.env.development":1452368860976,"/home/andy/Documents/projects/wordasaurus-js/.gitignore":1452368887801,"/home/andy/Documents/projects/wordasaurus-js/gulpfile.js":1452368892538,"/home/andy/Documents/projects/wordasaurus-js/package.json":1452369003994,"/home/andy/Documents/projects/wordasaurus-js/server/server.js":1452368719454,"/home/andy/Documents/projects/wordasaurus-js/models/User.js":1452368725414,"/home/andy/Documents/projects/wordasaurus-js/models/Document.js":1452368816620,"/home/andy/Documents/projects/wordasaurus-js/models/connection-string.js":1452368838383,"/home/andy/Documents/projects/wordasaurus-js/models/all-models.js":1452368829262},"metrics":{"sessionLength":355012},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/andy/Documents/projects/wordasaurus-js":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"models":{"isExpanded":true,"entries":{"seed":{"isExpanded":false,"entries":{}}}},"public":{"isExpanded":true,"entries":{"directives":{"isExpanded":false,"entries":{}},"fonts":{"isExpanded":false,"entries":{}},"imgs":{"isExpanded":false,"entries":{}},"partials":{"isExpanded":false,"entries":{}}}},"server":{"isExpanded":true,"entries":{"controllers":{"isExpanded":false,"entries":{}}}},"src":{"isExpanded":false,"entries":{}},"test":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/andy/Documents/projects/wordasaurus-js/package.json","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}