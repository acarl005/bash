{"version":1,"windowDimensions":{"x":65,"y":24,"width":1855,"height":1056,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/home/andy/Documents/production/codesmith-public-site/node_modules"],"buffers":[{"id":"3e9c394db25e60e3212e53cb49dd43b1","text":"'use strict';\n\nvar extract = require('extract-comments');\n\n/**\n * Strip comments from the given `string`.\n *\n * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n * @api public\n */\n\nfunction strip(str, options) {\n  options = options || {};\n  if (options.line) {\n    return line(str, options);\n  }\n  if (options.block) {\n    return block(str, options);\n  }\n  if (options.first) {\n    return first(str, options);\n  }\n  str = block(str, options);\n  return line(str, options);\n}\n\n/**\n * Strip block comments from the given `string`.\n *\n * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n * @api public\n */\n\nfunction block(str, options) {\n  return stripEach(str, extract.block(str, options), options);\n}\n\n/**\n * Strip line comments from the given `string`.\n *\n * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n * @api public\n */\n\nfunction line(str, options) {\n  return stripEach(str, extract.line(str, options), options);\n}\n\n/**\n * Strip the first comment from the given `string`.\n *\n * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n * @api public\n */\n\nfunction first(str, options) {\n  return stripEach(str, extract.first(str), options);\n}\n\n/**\n * Private function for stripping comments.\n *\n * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n */\n\nfunction stripEach(str, comments, options) {\n  comments.forEach(function(comment) {\n    str = discard(str, comment, options);\n  });\n  return str;\n}\n\n/**\n * Remove a comment from the given string.\n *\n * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n */\n\nfunction discard(str, comment, opts) {\n  var ch = comment.value.charAt(0);\n  if (opts && opts.safe === true && ch === '!') {\n    return str;\n  }\n  return str.split(comment.raw).join('');\n}\n\n/**\n * Expose `strip`\n */\n\nmodule.exports = strip;\n\n/**\n * Expose methods\n */\n\nmodule.exports.block = block;\nmodule.exports.first = first;\nmodule.exports.line = line;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"251":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"252":{"range":{"start":{"row":2,"column":0},"end":{"row":2,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"253":{"range":{"start":{"row":2,"column":0},"end":{"row":2,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"254":{"range":{"start":{"row":13,"column":0},"end":{"row":27,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"255":{"range":{"start":{"row":37,"column":0},"end":{"row":40,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"256":{"range":{"start":{"row":50,"column":0},"end":{"row":53,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"257":{"range":{"start":{"row":63,"column":0},"end":{"row":66,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":10,"column":11},"end":{"row":10,"column":11}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":2,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[10,4],[10,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[7,0]],"newRange":[[0,0],[0,0]],"oldText":"/*!\n * strip-comments <https://github.com/jonschlinkert/strip-comments>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Released under the MIT license.\n */\n\n","newText":""}},{"type":"change","content":{"oldRange":[[2,0],[3,0]],"newRange":[[2,0],[2,0]],"oldText":"var extend = require('extend-shallow');\n","newText":""}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[6,0]],"oldText":"","newText":" * Strip comments from the given `string`.\n"}},{"type":"change","content":{"oldRange":[[6,0],[9,0]],"newRange":[[6,0],[6,0]],"oldText":" * Strip all code comments from the given `input`,\n * including these that are ignored.\n * Pass `opts.safe: true` to keep them.\n","newText":""}},{"type":"change","content":{"oldRange":[[7,0],[7,0]],"newRange":[[7,0],[10,0]],"oldText":"","newText":" * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n"}},{"type":"change","content":{"oldRange":[[10,0],[26,0]],"newRange":[[10,0],[10,0]],"oldText":" * **Example**\n *\n * ```js\n * var str = strip('foo; // this is a comment\\n /* me too *\\/');\n * console.log(str);\n * // => 'foo; \\n '\n * ```\n *\n * @name  strip\n * @param  {String} `<input>` string from which to strip comments\n * @param  {Object} `opts` optional options, passed to [extract-comments][extract-comments]\n *   @option {Boolean} [opts] `line` if `false` strip only block comments, default `true`\n *   @option {Boolean} [opts] `block` if `false` strip only line comments, default `true`\n *   @option {Boolean} [opts] `safe` pass `true` to keep ignored comments (e.g. `/*!` and `//!`)\n *   @option {Boolean} [opts] `preserveNewlines` if `true` preserve newlines after comments are stripped\n * @return {String} modified input\n","newText":""}},{"type":"change","content":{"oldRange":[[13,0],[13,0]],"newRange":[[13,0],[27,0]],"oldText":"","newText":"function strip(str, options) {\n  options = options || {};\n  if (options.line) {\n    return line(str, options);\n  }\n  if (options.block) {\n    return block(str, options);\n  }\n  if (options.first) {\n    return first(str, options);\n  }\n  str = block(str, options);\n  return line(str, options);\n}\n"}},{"type":"change","content":{"oldRange":[[27,0],[31,0]],"newRange":[[27,0],[27,0]],"oldText":"exports = module.exports = function stripAllComments(input, opts) {\n  opts = extend({block: true, line: true}, opts);\n  return stripComments(input, opts);\n};\n","newText":""}},{"type":"change","content":{"oldRange":[[29,0],[29,0]],"newRange":[[29,0],[30,0]],"oldText":"","newText":" * Strip block comments from the given `string`.\n"}},{"type":"change","content":{"oldRange":[[30,0],[31,0]],"newRange":[[30,0],[30,0]],"oldText":" * Strip only block comments.\n","newText":""}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[34,0]],"oldText":"","newText":" * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n"}},{"type":"change","content":{"oldRange":[[34,0],[54,0]],"newRange":[[34,0],[34,0]],"oldText":" * **Example**\n *\n * ```js\n * var output = strip('foo; // this is a comment\\n /* me too *\\/', { line: false });\n * console.log(output);\n * // => 'foo; // this is a comment\\n '\n * ```\n *\n * **Example**\n *\n * ```js\n * var output = strip.block('foo; // this is a comment\\n /* me too *\\/');\n * console.log(output);\n * // => 'foo; // this is a comment\\n '\n * ```\n *\n * @name  .block\n * @param  {String} `<input>` string from which to strip comments\n * @param  {Object} `[opts]` pass `opts.safe: true` to keep ignored comments (e.g. `/*!`)\n * @return {String} modified string\n","newText":""}},{"type":"change","content":{"oldRange":[[37,0],[37,0]],"newRange":[[37,0],[40,0]],"oldText":"","newText":"function block(str, options) {\n  return stripEach(str, extract.block(str, options), options);\n}\n"}},{"type":"change","content":{"oldRange":[[40,0],[44,0]],"newRange":[[40,0],[40,0]],"oldText":"exports.block = function stripBlockComments(input, opts) {\n  opts = extend({block: true}, opts);\n  return stripComments(input, opts);\n};\n","newText":""}},{"type":"change","content":{"oldRange":[[42,0],[42,0]],"newRange":[[42,0],[43,0]],"oldText":"","newText":" * Strip line comments from the given `string`.\n"}},{"type":"change","content":{"oldRange":[[43,0],[44,0]],"newRange":[[43,0],[43,0]],"oldText":" * Strip only line comments.\n","newText":""}},{"type":"change","content":{"oldRange":[[44,0],[44,0]],"newRange":[[44,0],[47,0]],"oldText":"","newText":" * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n * @return {String}\n"}},{"type":"change","content":{"oldRange":[[47,0],[67,0]],"newRange":[[47,0],[47,0]],"oldText":" * **Example**\n *\n * ```js\n * var output = strip('foo; // this is a comment\\n /* me too *\\/', { block: false });\n * console.log(output);\n * // => 'foo; \\n /* me too *\\/'\n * ```\n *\n * **Example**\n *\n * ```js\n * var output = strip.line('foo; // this is a comment\\n /* me too *\\/');\n * console.log(output);\n * // => 'foo; \\n /* me too *\\/'\n * ```\n *\n * @name  .line\n * @param  {String} `<input>` string from which to strip comments\n * @param  {Object} `[opts]` pass `opts.safe: true` to keep ignored comments (e.g. `//!`)\n * @return {String} modified string\n","newText":""}},{"type":"change","content":{"oldRange":[[50,0],[50,0]],"newRange":[[50,0],[53,0]],"oldText":"","newText":"function line(str, options) {\n  return stripEach(str, extract.line(str, options), options);\n}\n"}},{"type":"change","content":{"oldRange":[[53,0],[57,0]],"newRange":[[53,0],[53,0]],"oldText":"exports.line = function stripLineComments(input, opts) {\n  opts = extend({line: true}, opts);\n  return stripComments(input, opts);\n};\n","newText":""}},{"type":"change","content":{"oldRange":[[55,0],[55,0]],"newRange":[[55,0],[56,0]],"oldText":"","newText":" * Strip the first comment from the given `string`.\n"}},{"type":"change","content":{"oldRange":[[56,0],[58,0]],"newRange":[[56,0],[56,0]],"oldText":" * Strip the first comment from the given `input`.\n * If `opts.safe: true` is passed, will strip the first that is not ignored.\n","newText":""}},{"type":"change","content":{"oldRange":[[57,0],[57,0]],"newRange":[[57,0],[59,0]],"oldText":"","newText":" * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n"}},{"type":"change","content":{"oldRange":[[59,0],[82,0]],"newRange":[[59,0],[59,0]],"oldText":" * **Example**\n *\n * ```js\n * var str = '//! first comment\\nfoo; // this is a comment';\n * var output = strip(str, {\n *   first: true\n * });\n * console.log(output);\n * // => '\\nfoo; // this is a comment'\n * ```\n *\n * **Example**\n *\n * ```js\n * var str = '//! first comment\\nfoo; // this is a comment';\n * var output = strip.first(str, { safe: true });\n * console.log(output);\n * // => '//! first comment\\nfoo; '\n * ```\n *\n * @name .first\n * @param {String} `<input>`\n * @param {Object} `[opts]` pass `opts.safe: true` to keep comments with `!`\n","newText":""}},{"type":"change","content":{"oldRange":[[63,0],[63,0]],"newRange":[[63,0],[66,0]],"oldText":"","newText":"function first(str, options) {\n  return stripEach(str, extract.first(str), options);\n}\n"}},{"type":"change","content":{"oldRange":[[66,0],[70,0]],"newRange":[[66,0],[66,0]],"oldText":"exports.first = function stripFirstComment(input, opts) {\n  opts = extend({block: true, line: true, first: true}, opts);\n  return stripComments(input, opts);\n};\n","newText":""}},{"type":"change","content":{"oldRange":[[70,0],[70,0]],"newRange":[[70,0],[72,0]],"oldText":"","newText":" * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n"}},{"type":"change","content":{"oldRange":[[72,0],[74,0]],"newRange":[[72,0],[72,0]],"oldText":" * @param  {String} `<input>`\n * @param  {Object} `[opts]`\n","newText":""}},{"type":"change","content":{"oldRange":[[73,0],[74,0]],"newRange":[[73,0],[73,0]],"oldText":" * @api private\n","newText":""}},{"type":"change","content":{"oldRange":[[74,0],[82,0]],"newRange":[[74,0],[74,0]],"oldText":"function stripComments(input, opts) {\n  // strip all by default, including `ingored` comments.\n  opts = extend({\n    block: false,\n    line: false,\n    safe: false,\n    first: false\n  }, opts);\n","newText":""}},{"type":"change","content":{"oldRange":[[75,0],[75,0]],"newRange":[[75,0],[80,0]],"oldText":"","newText":"function stripEach(str, comments, options) {\n  comments.forEach(function(comment) {\n    str = discard(str, comment, options);\n  });\n  return str;\n"}},{"type":"change","content":{"oldRange":[[80,0],[92,0]],"newRange":[[80,0],[80,0]],"oldText":"  // compatibility with `extract-comments`\n  opts.keepProtected = opts.safe;\n\n  var comments = extract(input, opts);\n  var len = comments.length;\n  var i = 0;\n\n  while (i < len) {\n    var comment = comments[i++];\n    input = discard(input, comment, opts);\n  }\n  return input;\n","newText":""}},{"type":"change","content":{"oldRange":[[85,0],[85,0]],"newRange":[[85,0],[87,0]],"oldText":"","newText":" * @param {String} `string`\n * @param {Object} `options` Pass `safe: true` to keep comments with `!`\n"}},{"type":"change","content":{"oldRange":[[87,0],[90,0]],"newRange":[[87,0],[87,0]],"oldText":" * @param {String} `str`\n * @param {Object} `comment`\n * @param {Object} `opts`\n","newText":""}},{"type":"change","content":{"oldRange":[[95,0],[95,0]],"newRange":[[95,0],[96,0]],"oldText":"","newText":"  return str.split(comment.raw).join('');\n"}},{"type":"change","content":{"oldRange":[[96,0],[107,0]],"newRange":[[96,0],[96,0]],"oldText":"  var nl = '';\n  if (opts && opts.preserveNewlines) {\n    nl = comment.raw.replace(/[^\\r\\n]/g, '');\n  }\n  if (comment.type === 'line') {\n    str = str.replace('//' + comment.raw, nl);\n  }\n  if (comment.type === 'block') {\n    str = str.replace('/*' + comment.raw + '*/', nl);\n  }\n  return str;\n","newText":""}},{"type":"change","content":{"oldRange":[[97,0],[97,0]],"newRange":[[97,0],[111,0]],"oldText":"","newText":"\n/**\n * Expose `strip`\n */\n\nmodule.exports = strip;\n\n/**\n * Expose methods\n */\n\nmodule.exports.block = block;\nmodule.exports.first = first;\nmodule.exports.line = line;\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[2,4],[2,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/production/codesmith-public-site/node_modules/strip-comments/index.js","digestWhenLastPersisted":"9a7dcb1f5e44e73285fc56fec8fc9611c7eff104","preferredLineEnding":null,"nextMarkerId":258,"deserializer":"TextBuffer","version":5},{"id":"1cdc674e7818e61398fcd05f2c7a6fd9","text":"'use strict';\n\nvar Block = require('./lib/block');\nvar Line = require('./lib/line');\nvar utils = require('./lib/utils');\n\n/**\n * Extract comments from the given `string`.\n *\n * ```js\n * extract(str, options);\n * ```\n * @param {String} `string`\n * @param {Object} `options` Pass `first: true` to return after the first comment is found.\n * @return {String}\n * @api public\n */\n\nfunction comments(str, options, fn) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n  return block(str, options, fn)\n    .concat(line(str, options, fn))\n    .sort(compare);\n}\n\n/**\n * Extract block comments from the given `string`.\n *\n * ```js\n * extract.block(str, options);\n * ```\n * @param {String} `string`\n * @param {Object} `options` Pass `first: true` to return after the first comment is found.\n * @return {String}\n * @api public\n */\n\nfunction block(str, options, fn) {\n  return factory('/*', '*/', Block)(str, options, fn);\n}\n\n/**\n * Extract line comments from the given `string`.\n *\n * ```js\n * extract.line(str, options);\n * ```\n * @param {String} `string`\n * @param {Object} `options` Pass `first: true` to return after the first comment is found.\n * @return {String}\n * @api public\n */\n\nfunction line(str, options, fn) {\n  return factory('//', '\\n', Line)(str, options, fn);\n}\n\n/**\n * Factory for extracting comments from a string.\n *\n * @param {String} `string`\n * @return {String}\n */\n\nfunction factory(open, close, Ctor) {\n  return function(str, options, fn) {\n    if (typeof str !== 'string') {\n      throw new TypeError('expected a string');\n    }\n\n    if (typeof options === 'function') {\n      fn = options;\n      options = {};\n    }\n\n    if (typeof fn !== 'function') {\n      fn = utils.identity;\n    }\n\n    var opts = utils.extend({}, options);\n    str = utils.normalize(str);\n    str = utils.escapeQuoted(str);\n\n    var res = [];\n    var start = str.indexOf(open);\n\n    // respect escaped slashes\n    if (str.charAt(start - 1) === '\\\\') {\n      start = str.indexOf(open, start + 2);\n    }\n\n    var end = str.indexOf(close, start);\n    var len = str.length;\n    if (end === -1) {\n      end = len;\n    }\n\n    while (start !== -1 && end <= len) {\n      var comment = fn(new Ctor(str, start, end, open, close));\n      res.push(comment);\n      if (opts.first && res.length === 1) {\n        return res;\n      }\n      start = str.indexOf(open, end + 1);\n      end = str.indexOf(close, start);\n      if (end === -1) {\n        end = len;\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Extract the first comment from the given `string`.\n *\n * @param {String} `string`\n * @param {Object} `options` Pass `first: true` to return after the first comment is found.\n * @return {String}\n * @api public\n */\n\nfunction first(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  var arr = comments(str, {first: true});\n  if (arr && arr.length) {\n    return arr[0].raw;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Utility for sorting line and block comments into\n * the correct order.\n */\n\nfunction compare(a, b) {\n  return a.loc.start.pos - b.loc.start.pos;\n}\n\n/**\n * Expose `extract` module\n */\n\nmodule.exports = comments;\n\n/**\n * Expose `extract.first` method\n */\n\nmodule.exports.first = first;\n\n/**\n * Expose `extract.block` method\n */\n\nmodule.exports.block = block;\n\n/**\n * Expose `extract.line` method\n */\n\nmodule.exports.line = line;\n\n/**\n * Expose `extract.factory` method\n */\n\nmodule.exports.factory = factory;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"61":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"62":{"range":{"start":{"row":2,"column":0},"end":{"row":5,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"63":{"range":{"start":{"row":5,"column":0},"end":{"row":5,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"64":{"range":{"start":{"row":142,"column":0},"end":{"row":145,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"65":{"range":{"start":{"row":150,"column":0},"end":{"row":162,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"66":{"range":{"start":{"row":163,"column":0},"end":{"row":168,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"67":{"range":{"start":{"row":169,"column":0},"end":{"row":169,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"68":{"range":{"start":{"row":174,"column":0},"end":{"row":175,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap"},"71":{"range":{"start":{"row":10,"column":10},"end":{"row":10,"column":11}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"72":{"range":{"start":{"row":10,"column":23},"end":{"row":10,"column":24}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":10,"column":10},"end":{"row":10,"column":10}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":2,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[10,4],[10,10]],"properties":{"type":"selection"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[7,0]],"newRange":[[0,0],[0,0]],"oldText":"/*!\n * extract-comments <https://github.com/jonschlinkert/extract-comments>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT license.\n */\n\n","newText":""}},{"type":"change","content":{"oldRange":[[2,0],[2,0]],"newRange":[[2,0],[5,0]],"oldText":"","newText":"var Block = require('./lib/block');\nvar Line = require('./lib/line');\nvar utils = require('./lib/utils');\n"}},{"type":"change","content":{"oldRange":[[5,0],[7,0]],"newRange":[[5,0],[5,0]],"oldText":"var extend = require('extend-shallow');\nvar Comments = require('./lib/comments');\n","newText":""}},{"type":"change","content":{"oldRange":[[18,0],[18,0]],"newRange":[[18,0],[21,0]],"oldText":"","newText":"function comments(str, options, fn) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n"}},{"type":"change","content":{"oldRange":[[21,0],[25,0]],"newRange":[[21,0],[21,0]],"oldText":"function extract(str, options, fn) {\n  if (typeof options === 'function') {\n    fn = options;\n    options = {};\n","newText":""}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[25,0]],"oldText":"","newText":"  return block(str, options, fn)\n    .concat(line(str, options, fn))\n    .sort(compare);\n"}},{"type":"change","content":{"oldRange":[[25,0],[28,0]],"newRange":[[25,0],[25,0]],"oldText":"  var extracted = new Comments(options, fn);\n  var res = extracted.extract(str);\n  return res.comments || [];\n","newText":""}},{"type":"change","content":{"oldRange":[[33,0],[34,0]],"newRange":[[33,0],[33,0]],"oldText":" * @name .block\n","newText":""}},{"type":"change","content":{"oldRange":[[39,0],[39,0]],"newRange":[[39,0],[41,0]],"oldText":"","newText":"function block(str, options, fn) {\n  return factory('/*', '*/', Block)(str, options, fn);\n"}},{"type":"change","content":{"oldRange":[[41,0],[43,0]],"newRange":[[41,0],[41,0]],"oldText":"function block(str, options) {\n  return extract(str, extend({line: false}, options));\n","newText":""}},{"type":"change","content":{"oldRange":[[49,0],[50,0]],"newRange":[[49,0],[49,0]],"oldText":" * @name .line\n","newText":""}},{"type":"change","content":{"oldRange":[[55,0],[55,0]],"newRange":[[55,0],[57,0]],"oldText":"","newText":"function line(str, options, fn) {\n  return factory('//', '\\n', Line)(str, options, fn);\n"}},{"type":"change","content":{"oldRange":[[57,0],[59,0]],"newRange":[[57,0],[57,0]],"oldText":"function line(str, options) {\n  return extract(str, extend({block: false}, options));\n","newText":""}},{"type":"change","content":{"oldRange":[[60,0],[60,0]],"newRange":[[60,0],[116,0]],"oldText":"","newText":" * Factory for extracting comments from a string.\n *\n * @param {String} `string`\n * @return {String}\n */\n\nfunction factory(open, close, Ctor) {\n  return function(str, options, fn) {\n    if (typeof str !== 'string') {\n      throw new TypeError('expected a string');\n    }\n\n    if (typeof options === 'function') {\n      fn = options;\n      options = {};\n    }\n\n    if (typeof fn !== 'function') {\n      fn = utils.identity;\n    }\n\n    var opts = utils.extend({}, options);\n    str = utils.normalize(str);\n    str = utils.escapeQuoted(str);\n\n    var res = [];\n    var start = str.indexOf(open);\n\n    // respect escaped slashes\n    if (str.charAt(start - 1) === '\\\\') {\n      start = str.indexOf(open, start + 2);\n    }\n\n    var end = str.indexOf(close, start);\n    var len = str.length;\n    if (end === -1) {\n      end = len;\n    }\n\n    while (start !== -1 && end <= len) {\n      var comment = fn(new Ctor(str, start, end, open, close));\n      res.push(comment);\n      if (opts.first && res.length === 1) {\n        return res;\n      }\n      start = str.indexOf(open, end + 1);\n      end = str.indexOf(close, start);\n      if (end === -1) {\n        end = len;\n      }\n    }\n    return res;\n  };\n}\n\n/**\n"}},{"type":"change","content":{"oldRange":[[118,0],[119,0]],"newRange":[[118,0],[118,0]],"oldText":" * @name .first\n","newText":""}},{"type":"change","content":{"oldRange":[[125,0],[125,0]],"newRange":[[125,0],[135,0]],"oldText":"","newText":"  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  var arr = comments(str, {first: true});\n  if (arr && arr.length) {\n    return arr[0].raw;\n  } else {\n    return null;\n  }\n"}},{"type":"change","content":{"oldRange":[[135,0],[136,0]],"newRange":[[135,0],[135,0]],"oldText":"  return extract(str, {first: true});\n","newText":""}},{"type":"change","content":{"oldRange":[[138,0],[138,0]],"newRange":[[138,0],[140,0]],"oldText":"","newText":" * Utility for sorting line and block comments into\n * the correct order.\n"}},{"type":"change","content":{"oldRange":[[140,0],[141,0]],"newRange":[[140,0],[140,0]],"oldText":" * Expose `extract`\n","newText":""}},{"type":"change","content":{"oldRange":[[142,0],[142,0]],"newRange":[[142,0],[145,0]],"oldText":"","newText":"function compare(a, b) {\n  return a.loc.start.pos - b.loc.start.pos;\n}\n"}},{"type":"change","content":{"oldRange":[[145,0],[146,0]],"newRange":[[145,0],[145,0]],"oldText":"module.exports = extract;\n","newText":""}},{"type":"change","content":{"oldRange":[[147,0],[147,0]],"newRange":[[147,0],[148,0]],"oldText":"","newText":" * Expose `extract` module\n"}},{"type":"change","content":{"oldRange":[[148,0],[149,0]],"newRange":[[148,0],[148,0]],"oldText":" * Expose convenience methods\n","newText":""}},{"type":"change","content":{"oldRange":[[150,0],[150,0]],"newRange":[[150,0],[162,0]],"oldText":"","newText":"module.exports = comments;\n\n/**\n * Expose `extract.first` method\n */\n\nmodule.exports.first = first;\n\n/**\n * Expose `extract.block` method\n */\n\n"}},{"type":"change","content":{"oldRange":[[163,0],[163,0]],"newRange":[[163,0],[168,0]],"oldText":"","newText":"\n/**\n * Expose `extract.line` method\n */\n\n"}},{"type":"change","content":{"oldRange":[[169,0],[170,0]],"newRange":[[169,0],[169,0]],"oldText":"module.exports.first = first;\n","newText":""}},{"type":"change","content":{"oldRange":[[171,0],[171,0]],"newRange":[[171,0],[172,0]],"oldText":"","newText":" * Expose `extract.factory` method\n"}},{"type":"change","content":{"oldRange":[[172,0],[174,0]],"newRange":[[172,0],[172,0]],"oldText":" * Expose `Comments` constructor, to\n * allow custom plugins to be registered.\n","newText":""}},{"type":"change","content":{"oldRange":[[174,0],[174,0]],"newRange":[[174,0],[175,0]],"oldText":"","newText":"module.exports.factory = factory;\n"}},{"type":"change","content":{"oldRange":[[175,0],[176,0]],"newRange":[[175,0],[175,0]],"oldText":"module.exports.Comments = Comments;\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[5,0],[5,0]],"properties":{"type":"selection"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/index.js","digestWhenLastPersisted":"390ac7d31aab33710cdbe0cda77c0a48d086ed8e","preferredLineEnding":null,"nextMarkerId":73,"deserializer":"TextBuffer","version":5},{"id":"d5c394e5ef23b85265de2a9fae16c4e5","text":"/*!\n * extract-comments <https://github.com/jonschlinkert/extract-comments>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar extract = require('esprima-extract-comments');\nvar extend = require('extend-shallow');\nvar define = require('define-property');\nvar Context = require('./context');\nvar Block = require('./block');\nvar Line = require('./line');\n\n/**\n * If you need to customize the generated comment objects, you\n * can create an instance of `Comments`:\n *\n * ```js\n * var extract = require('extract-comments');\n * var Comments = extract.Comments;\n * var comments = new Comments(options);\n * ```\n * @param {String} `string`\n * @param {Object} `options`\n * @param {Object} `options.first` Return the first comment only\n * @param {Object} `options.banner` alias for `options.first`\n * @param {Function} `fn` Optionally pass a transform function to call on each token (comment) in the AST.\n * @return {String}\n * @api public\n */\n\nfunction Comments(options, fn) {\n  this.options = extend({type: 'block'}, options);\n  this.transform = fn;\n  this.comments = [];\n}\n\nComments.prototype.extract = function(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  define(this, 'input', str);\n\n  var opts = this.options;\n  var ast = [];\n\n  try {\n    ast = extract(this.input);\n  } catch (err) {\n    if (opts.silent !== true) {\n      throw err;\n    }\n  }\n\n  var strip = opts.stripProtected;\n  var keep = opts.keepProtected;\n\n  if (typeof keep === 'undefined' && typeof strip === 'undefined') {\n    strip = false;\n  } else if (typeof keep !== 'undefined') {\n    strip = !keep;\n  }\n\n  var len = ast.length;\n  var idx = -1;\n\n  while (++idx < len) {\n    var token = ast[idx];\n    token.type = token.type.toLowerCase();\n\n    if (typeof this.options.filter === 'function') {\n      if (this.options.filter(token)) {\n        continue;\n      }\n    }\n\n    if (/^\\*?!/.test(token.value) && strip === false) {\n      continue;\n    }\n\n    if (token.type === 'block' && opts.block !== false) {\n      var comment = new Block(str, token, opts);\n\n      if (opts.context !== false) {\n        comment.code = new Context(str, comment, opts);\n      }\n\n      if (typeof this.transform === 'function') {\n        var res = this.transform(comment, this.options);\n        if (res) comment = res;\n      }\n\n      this.comments.push(comment);\n    }\n\n    if (token.type === 'line' && opts.line !== false) {\n      this.comments.push(new Line(str, token, opts));\n    }\n\n    if ((opts.first || opts.banner) && this.comments.length === 1) {\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Expose `Comments` constructor, to\n * allow plugins to be registered.\n */\n\nmodule.exports = Comments;\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"116":{"range":{"start":{"row":7,"column":0},"end":{"row":7,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"117":{"range":{"start":{"row":9,"column":0},"end":{"row":9,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"118":{"range":{"start":{"row":10,"column":0},"end":{"row":10,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"119":{"range":{"start":{"row":11,"column":0},"end":{"row":11,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"120":{"range":{"start":{"row":12,"column":0},"end":{"row":12,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"121":{"range":{"start":{"row":13,"column":0},"end":{"row":13,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"122":{"range":{"start":{"row":14,"column":0},"end":{"row":14,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"123":{"range":{"start":{"row":115,"column":0},"end":{"row":115,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/lib/comments.js","digestWhenLastPersisted":"da39a3ee5e6b4b0d3255bfef95601890afd80709","preferredLineEnding":null,"nextMarkerId":124,"deserializer":"TextBuffer","version":5},{"id":"24b687f4370a82a3b17dd73416c5864b","text":"/*!\n * esprima-extract-comments <https://github.com/jonschlinkert/esprima-extract-comments>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar esprima = require('esprima');\n\n/**\n * Extract code comments from the given `string`.\n *\n * ```js\n * var extract = require('esprima-extract-comments');\n * extract('// this is a code comment');\n * ```\n * @param  {String} `string`\n * @param  {Object} `options` Options to pass to esprima.\n * @return {Object} Object of code comments.\n * @api public\n */\n\nmodule.exports = function(str) {\n  var ast = esprima.parse(str, {\n    tolerant: true,\n    comment: true,\n    tokens: true,\n    range: true,\n    loc: true\n  });\n\n  return ast.comments;\n};\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"2":{"range":{"start":{"row":7,"column":0},"end":{"row":7,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"3":{"range":{"start":{"row":9,"column":0},"end":{"row":9,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"4":{"range":{"start":{"row":24,"column":0},"end":{"row":24,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/production/codesmith-public-site/node_modules/esprima-extract-comments/index.js","digestWhenLastPersisted":"da39a3ee5e6b4b0d3255bfef95601890afd80709","preferredLineEnding":null,"nextMarkerId":5,"deserializer":"TextBuffer","version":5},{"id":"4ec71bd2e75e08efeb095b25fc0c388c","text":"{\n  \"_args\": [\n    [\n      \"package-json@^1.0.0\",\n      \"/home/andy/Documents/production/codesmith-public-site/node_modules/latest-version\"\n    ]\n  ],\n  \"_from\": \"package-json@>=1.0.0 <2.0.0\",\n  \"_id\": \"package-json@1.2.0\",\n  \"_inCache\": true,\n  \"_installable\": true,\n  \"_location\": \"/package-json\",\n  \"_nodeVersion\": \"0.12.4\",\n  \"_npmUser\": {\n    \"email\": \"sindresorhus@gmail.com\",\n    \"name\": \"sindresorhus\"\n  },\n  \"_npmVersion\": \"2.10.1\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"name\": \"package-json\",\n    \"raw\": \"package-json@^1.0.0\",\n    \"rawSpec\": \"^1.0.0\",\n    \"scope\": null,\n    \"spec\": \">=1.0.0 <2.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"/latest-version\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/package-json/-/package-json-1.2.0.tgz\",\n  \"_shasum\": \"c8ecac094227cdf76a316874ed05e27cc939a0e0\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"package-json@^1.0.0\",\n  \"_where\": \"/home/andy/Documents/production/codesmith-public-site/node_modules/latest-version\",\n  \"author\": {\n    \"email\": \"sindresorhus@gmail.com\",\n    \"name\": \"Sindre Sorhus\",\n    \"url\": \"sindresorhus.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/sindresorhus/package-json/issues\"\n  },\n  \"dependencies\": {\n    \"got\": \"^3.2.0\",\n    \"registry-url\": \"^3.0.0\"\n  },\n  \"description\": \"Get the package.json of a package from the npm registry\",\n  \"devDependencies\": {\n    \"mocha\": \"*\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"shasum\": \"c8ecac094227cdf76a316874ed05e27cc939a0e0\",\n    \"tarball\": \"http://registry.npmjs.org/package-json/-/package-json-1.2.0.tgz\"\n  },\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"files\": [\n    \"index.js\"\n  ],\n  \"gitHead\": \"0119e976716d376994fd8d40ef7112dca597f4b6\",\n  \"homepage\": \"https://github.com/sindresorhus/package-json\",\n  \"keywords\": [\n    \"json\",\n    \"module\",\n    \"npm\",\n    \"package\",\n    \"package.json\",\n    \"pkg\",\n    \"registry\",\n    \"scope\",\n    \"scoped\"\n  ],\n  \"license\": \"MIT\",\n  \"maintainers\": [\n    {\n      \"name\": \"sindresorhus\",\n      \"email\": \"sindresorhus@gmail.com\"\n    }\n  ],\n  \"name\": \"package-json\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/sindresorhus/package-json.git\"\n  },\n  \"scripts\": {\n    \"test\": \"mocha\"\n  },\n  \"version\": \"1.2.0\"\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"6":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"7":{"range":{"start":{"row":93,"column":0},"end":{"row":93,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/production/codesmith-public-site/node_modules/package-json/package.json","digestWhenLastPersisted":"5aa3c4559d61662edb417e14260684f714a964fc","preferredLineEnding":null,"nextMarkerId":8,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/production/codesmith-public-site/node_modules/strip-comments/index.js","bufferId":"3e9c394db25e60e3212e53cb49dd43b1","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":28,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":29,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/index.js","bufferId":"1cdc674e7818e61398fcd05f2c7a6fd9","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":32,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":33,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/lib/comments.js","bufferId":"d5c394e5ef23b85265de2a9fae16c4e5","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":36,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":37,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/production/codesmith-public-site/node_modules/esprima-extract-comments/index.js","bufferId":"24b687f4370a82a3b17dd73416c5864b","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":44,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":45,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/production/codesmith-public-site/node_modules/package-json/package.json","bufferId":"4ec71bd2e75e08efeb095b25fc0c388c","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/home/andy/Documents/production/codesmith-public-site/node_modules/package-json/package.json","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-javascript","language-json","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-02-17T01:42:56.093Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/home/andy/Documents/production/codesmith-public-site/node_modules/strip-comments/index.js","colorMarkers":[]},"28":{"id":28,"path":"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/index.js","colorMarkers":[]},"32":{"id":32,"path":"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/lib/comments.js","colorMarkers":[]},"36":{"id":36,"path":"/home/andy/Documents/production/codesmith-public-site/node_modules/esprima-extract-comments/index.js","colorMarkers":[]},"44":{"id":44,"path":"/home/andy/Documents/production/codesmith-public-site/node_modules/package-json/package.json","colorMarkers":[]}},"paths":["/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/_c.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/a.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/b.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/d.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/f.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/g.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/i.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/j.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/m.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/r.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/_o.scss/_p.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/compass/_n.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/components/_compass.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/components/_e.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/components/k.l.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/nested/_h.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/nested/_i.scss","/home/andy/Documents/production/codesmith-public-site/node_modules/sass-graph/test/fixtures/components/_q.scss/_s.scss"],"variables":{"deserializer":"VariablesCollection","content":[]}}},"find-and-replace":{"findOptions":{"findPattern":"eval","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["eval","extract","commen","eval"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/home/andy/Documents/production/codesmith-public-site/node_modules/strip-comments/index.js":1455671266712,"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/index.js":1455671368248,"/home/andy/Documents/production/codesmith-public-site/node_modules/extract-comments/lib/comments.js":1455671377200,"/home/andy/Documents/production/codesmith-public-site/node_modules/esprima-extract-comments/index.js":1455671438810,"/home/andy/Documents/production/codesmith-public-site/node_modules/package-json/package.json":1455671453111},"keybinding-resolver":{},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/andy/Documents/production/codesmith-public-site/node_modules":{"isExpanded":true,"entries":{".bin":{"isExpanded":false,"entries":{}},"abbrev":{"isExpanded":false,"entries":{}},"acorn":{"isExpanded":false,"entries":{}},"acorn-globals":{"isExpanded":false,"entries":{}},"adm-zip":{"isExpanded":false,"entries":{}},"align-text":{"isExpanded":false,"entries":{}},"amdefine":{"isExpanded":false,"entries":{}},"ansi":{"isExpanded":false,"entries":{}},"ansi-regex":{"isExpanded":false,"entries":{}},"ansi-styles":{"isExpanded":false,"entries":{}},"anymatch":{"isExpanded":false,"entries":{}},"archy":{"isExpanded":false,"entries":{}},"are-we-there-yet":{"isExpanded":false,"entries":{}},"arr-diff":{"isExpanded":false,"entries":{}},"arr-flatten":{"isExpanded":false,"entries":{}},"array-differ":{"isExpanded":false,"entries":{}},"array-find-index":{"isExpanded":false,"entries":{}},"array-index":{"isExpanded":false,"entries":{}},"array-union":{"isExpanded":false,"entries":{}},"array-uniq":{"isExpanded":false,"entries":{}},"array-unique":{"isExpanded":false,"entries":{}},"arrify":{"isExpanded":false,"entries":{}},"asn1":{"isExpanded":false,"entries":{}},"asn1.js":{"isExpanded":false,"entries":{}},"assert":{"isExpanded":false,"entries":{}},"assert-plus":{"isExpanded":false,"entries":{}},"assertion-error":{"isExpanded":false,"entries":{}},"astw":{"isExpanded":false,"entries":{}},"async":{"isExpanded":false,"entries":{}},"async-each":{"isExpanded":false,"entries":{}},"async-foreach":{"isExpanded":false,"entries":{}},"atob":{"isExpanded":false,"entries":{}},"aws-sign2":{"isExpanded":false,"entries":{}},"aws4":{"isExpanded":false,"entries":{}},"babel-runtime":{"isExpanded":false,"entries":{}},"balanced-match":{"isExpanded":false,"entries":{}},"base62":{"isExpanded":false,"entries":{}},"Base64":{"isExpanded":false,"entries":{}},"base64-js":{"isExpanded":false,"entries":{}},"bcrypt-nodejs":{"isExpanded":false,"entries":{}},"beeper":{"isExpanded":false,"entries":{}},"binary-extensions":{"isExpanded":false,"entries":{}},"bindings":{"isExpanded":false,"entries":{}},"bl":{"isExpanded":false,"entries":{}},"block-stream":{"isExpanded":false,"entries":{}},"bluebird":{"isExpanded":false,"entries":{}},"bn.js":{"isExpanded":false,"entries":{}},"boom":{"isExpanded":false,"entries":{}},"bower":{"isExpanded":false,"entries":{}},"brace-expansion":{"isExpanded":false,"entries":{}},"braces":{"isExpanded":false,"entries":{}},"brorand":{"isExpanded":false,"entries":{}},"browser-pack":{"isExpanded":false,"entries":{}},"browser-request":{"isExpanded":false,"entries":{}},"browser-resolve":{"isExpanded":false,"entries":{}},"browserify":{"isExpanded":false,"entries":{}},"browserify-aes":{"isExpanded":false,"entries":{}},"browserify-cipher":{"isExpanded":false,"entries":{}},"browserify-des":{"isExpanded":false,"entries":{}},"browserify-rsa":{"isExpanded":false,"entries":{}},"browserify-shim":{"isExpanded":false,"entries":{}},"browserify-sign":{"isExpanded":false,"entries":{}},"browserify-zlib":{"isExpanded":false,"entries":{}},"bson":{"isExpanded":false,"entries":{}},"buffer":{"isExpanded":false,"entries":{}},"buffer-xor":{"isExpanded":false,"entries":{}},"bufferutil":{"isExpanded":false,"entries":{}},"builtin-modules":{"isExpanded":false,"entries":{}},"builtin-status-codes":{"isExpanded":false,"entries":{}},"builtins":{"isExpanded":false,"entries":{}},"callsite":{"isExpanded":false,"entries":{}},"camelcase":{"isExpanded":false,"entries":{}},"camelcase-keys":{"isExpanded":false,"entries":{}},"caseless":{"isExpanded":false,"entries":{}},"casperjs":{"isExpanded":false,"entries":{}},"center-align":{"isExpanded":false,"entries":{}},"chai":{"isExpanded":false,"entries":{}},"chalk":{"isExpanded":false,"entries":{}},"charenc":{"isExpanded":false,"entries":{}},"chokidar":{"isExpanded":false,"entries":{}},"cipher-base":{"isExpanded":false,"entries":{}},"cliui":{"isExpanded":false,"entries":{}},"clone":{"isExpanded":false,"entries":{}},"clone-stats":{"isExpanded":false,"entries":{}},"code-point-at":{"isExpanded":false,"entries":{}},"colors":{"isExpanded":false,"entries":{}},"combine-source-map":{"isExpanded":false,"entries":{}},"combined-stream":{"isExpanded":false,"entries":{}},"commander":{"isExpanded":false,"entries":{}},"commondir":{"isExpanded":false,"entries":{}},"component-emitter":{"isExpanded":false,"entries":{}},"concat-map":{"isExpanded":false,"entries":{}},"concat-stream":{"isExpanded":false,"entries":{}},"config":{"isExpanded":false,"entries":{}},"config-chain":{"isExpanded":false,"entries":{}},"configstore":{"isExpanded":false,"entries":{}},"console-browserify":{"isExpanded":false,"entries":{}},"constants-browserify":{"isExpanded":false,"entries":{}},"convert-source-map":{"isExpanded":false,"entries":{}},"cookiejar":{"isExpanded":false,"entries":{}},"core-js":{"isExpanded":false,"entries":{}},"core-util-is":{"isExpanded":false,"entries":{}},"create-ecdh":{"isExpanded":false,"entries":{}},"create-hash":{"isExpanded":false,"entries":{}},"create-hmac":{"isExpanded":false,"entries":{}},"cross-spawn":{"isExpanded":false,"entries":{}},"cross-spawn-async":{"isExpanded":false,"entries":{}},"crypt":{"isExpanded":false,"entries":{}},"cryptiles":{"isExpanded":false,"entries":{}},"crypto":{"isExpanded":false,"entries":{}},"crypto-browserify":{"isExpanded":false,"entries":{}},"css":{"isExpanded":false,"entries":{}},"cssom":{"isExpanded":false,"entries":{}},"cssstyle":{"isExpanded":false,"entries":{}},"ctype":{"isExpanded":false,"entries":{}},"d":{"isExpanded":false,"entries":{}},"dashdash":{"isExpanded":false,"entries":{}},"date-now":{"isExpanded":false,"entries":{}},"dateformat":{"isExpanded":false,"entries":{}},"deap":{"isExpanded":false,"entries":{}},"debug":{"isExpanded":false,"entries":{}},"decamelize":{"isExpanded":false,"entries":{}},"deep-eql":{"isExpanded":false,"entries":{}},"deep-equal":{"isExpanded":false,"entries":{}},"deep-extend":{"isExpanded":false,"entries":{}},"deep-is":{"isExpanded":false,"entries":{}},"defaults":{"isExpanded":false,"entries":{}},"defined":{"isExpanded":false,"entries":{}},"delayed-stream":{"isExpanded":false,"entries":{}},"delegates":{"isExpanded":false,"entries":{}},"deprecated":{"isExpanded":false,"entries":{}},"deps-sort":{"isExpanded":false,"entries":{}},"derequire":{"isExpanded":false,"entries":{}},"des.js":{"isExpanded":false,"entries":{}},"detective":{"isExpanded":false,"entries":{}},"diff":{"isExpanded":false,"entries":{}},"diffie-hellman":{"isExpanded":false,"entries":{}},"dom-serializer":{"isExpanded":false,"entries":{}},"domain-browser":{"isExpanded":false,"entries":{}},"domelementtype":{"isExpanded":false,"entries":{}},"domhandler":{"isExpanded":false,"entries":{}},"domutils":{"isExpanded":false,"entries":{}},"duplexer":{"isExpanded":false,"entries":{}},"duplexer2":{"isExpanded":false,"entries":{}},"duplexify":{"isExpanded":false,"entries":{}},"ecc-jsbn":{"isExpanded":false,"entries":{}},"elliptic":{"isExpanded":false,"entries":{}},"end-of-stream":{"isExpanded":false,"entries":{}},"entities":{"isExpanded":false,"entries":{}},"envify":{"isExpanded":false,"entries":{}},"error-ex":{"isExpanded":false,"entries":{}},"es5-ext":{"isExpanded":false,"entries":{}},"es6-iterator":{"isExpanded":false,"entries":{}},"es6-promise":{"isExpanded":false,"entries":{}},"es6-symbol":{"isExpanded":false,"entries":{}},"escape-string-regexp":{"isExpanded":false,"entries":{}},"escodegen":{"isExpanded":false,"entries":{}},"escope":{"isExpanded":false,"entries":{}},"esprima-fb":{"isExpanded":false,"entries":{}},"esrefactor":{"isExpanded":false,"entries":{}},"estraverse":{"isExpanded":false,"entries":{}},"esutils":{"isExpanded":false,"entries":{}},"event-stream":{"isExpanded":false,"entries":{}},"events":{"isExpanded":false,"entries":{}},"eventsource":{"isExpanded":false,"entries":{}},"evp_bytestokey":{"isExpanded":false,"entries":{}},"expand-brackets":{"isExpanded":false,"entries":{}},"expand-range":{"isExpanded":false,"entries":{}},"extend":{"isExpanded":false,"entries":{}},"extend-shallow":{"isExpanded":false,"entries":{}},"extglob":{"isExpanded":false,"entries":{}},"extract-comments":{"isExpanded":true,"entries":{}},"extsprintf":{"isExpanded":false,"entries":{}},"fancy-log":{"isExpanded":false,"entries":{}},"fast-levenshtein":{"isExpanded":false,"entries":{}},"filename-regex":{"isExpanded":false,"entries":{}},"fill-range":{"isExpanded":false,"entries":{}},"find-index":{"isExpanded":false,"entries":{}},"find-up":{"isExpanded":false,"entries":{}},"findup-sync":{"isExpanded":false,"entries":{}},"first-chunk-stream":{"isExpanded":false,"entries":{}},"flagged-respawn":{"isExpanded":false,"entries":{}},"for-in":{"isExpanded":false,"entries":{}},"for-own":{"isExpanded":false,"entries":{}},"foreach":{"isExpanded":false,"entries":{}},"forever-agent":{"isExpanded":false,"entries":{}},"form-data":{"isExpanded":false,"entries":{}},"formidable":{"isExpanded":false,"entries":{}},"from":{"isExpanded":false,"entries":{}},"fs-extra":{"isExpanded":false,"entries":{}},"fstream":{"isExpanded":false,"entries":{}},"function-bind":{"isExpanded":false,"entries":{}},"gauge":{"isExpanded":false,"entries":{}},"gaze":{"isExpanded":false,"entries":{}},"generate-function":{"isExpanded":false,"entries":{}},"generate-object-property":{"isExpanded":false,"entries":{}},"get-imports":{"isExpanded":false,"entries":{}},"get-stdin":{"isExpanded":false,"entries":{}},"glob":{"isExpanded":false,"entries":{}},"glob-base":{"isExpanded":false,"entries":{}},"glob-parent":{"isExpanded":false,"entries":{}},"glob-stream":{"isExpanded":false,"entries":{}},"glob-watcher":{"isExpanded":false,"entries":{}},"glob2base":{"isExpanded":false,"entries":{}},"globby":{"isExpanded":false,"entries":{}},"globule":{"isExpanded":false,"entries":{}},"glogg":{"isExpanded":false,"entries":{}},"good":{"isExpanded":false,"entries":{}},"good-console":{"isExpanded":false,"entries":{}},"good-squeeze":{"isExpanded":false,"entries":{}},"got":{"isExpanded":false,"entries":{}},"graceful-fs":{"isExpanded":false,"entries":{}},"graceful-readlink":{"isExpanded":false,"entries":{}},"growl":{"isExpanded":false,"entries":{}},"gulp":{"isExpanded":false,"entries":{}},"gulp-browserify":{"isExpanded":false,"entries":{}},"gulp-concat-css":{"isExpanded":false,"entries":{}},"gulp-nodemon":{"isExpanded":false,"entries":{}},"gulp-sass":{"isExpanded":false,"entries":{}},"gulp-sourcemaps":{"isExpanded":false,"entries":{}},"gulp-uglify":{"isExpanded":false,"entries":{}},"gulp-util":{"isExpanded":false,"entries":{}},"gulplog":{"isExpanded":false,"entries":{}},"hapi":{"isExpanded":false,"entries":{}},"hapi-auth-cookie":{"isExpanded":false,"entries":{}},"hapi-require-https":{"isExpanded":false,"entries":{}},"har-validator":{"isExpanded":false,"entries":{}},"has":{"isExpanded":false,"entries":{}},"has-ansi":{"isExpanded":false,"entries":{}},"has-gulplog":{"isExpanded":false,"entries":{}},"has-unicode":{"isExpanded":false,"entries":{}},"hash.js":{"isExpanded":false,"entries":{}},"hashids":{"isExpanded":false,"entries":{}},"hawk":{"isExpanded":false,"entries":{}},"hoek":{"isExpanded":false,"entries":{}},"hooks-fixed":{"isExpanded":false,"entries":{}},"hosted-git-info":{"isExpanded":false,"entries":{}},"htmlescape":{"isExpanded":false,"entries":{}},"htmlparser2":{"isExpanded":false,"entries":{}},"http-browserify":{"isExpanded":false,"entries":{}},"http-signature":{"isExpanded":false,"entries":{}},"https-browserify":{"isExpanded":false,"entries":{}},"iconv-lite":{"isExpanded":false,"entries":{}},"ieee754":{"isExpanded":false,"entries":{}},"import-regex":{"isExpanded":false,"entries":{}},"imurmurhash":{"isExpanded":false,"entries":{}},"indent-string":{"isExpanded":false,"entries":{}},"indexof":{"isExpanded":false,"entries":{}},"infinity-agent":{"isExpanded":false,"entries":{}},"inflight":{"isExpanded":false,"entries":{}},"inherits":{"isExpanded":false,"entries":{}},"ini":{"isExpanded":false,"entries":{}},"inline-source-map":{"isExpanded":false,"entries":{}},"insert-module-globals":{"isExpanded":false,"entries":{}},"interpret":{"isExpanded":false,"entries":{}},"invert-kv":{"isExpanded":false,"entries":{}},"ip-regex":{"isExpanded":false,"entries":{}},"is-absolute":{"isExpanded":false,"entries":{}},"is-arrayish":{"isExpanded":false,"entries":{}},"is-binary-path":{"isExpanded":false,"entries":{}},"is-buffer":{"isExpanded":false,"entries":{}},"is-builtin-module":{"isExpanded":false,"entries":{}},"is-dotfile":{"isExpanded":false,"entries":{}},"is-equal-shallow":{"isExpanded":false,"entries":{}},"is-extendable":{"isExpanded":false,"entries":{}},"is-extglob":{"isExpanded":false,"entries":{}},"is-finite":{"isExpanded":false,"entries":{}},"is-fullwidth-code-point":{"isExpanded":false,"entries":{}},"is-glob":{"isExpanded":false,"entries":{}},"is-my-json-valid":{"isExpanded":false,"entries":{}},"is-npm":{"isExpanded":false,"entries":{}},"is-number":{"isExpanded":false,"entries":{}},"is-primitive":{"isExpanded":false,"entries":{}},"is-property":{"isExpanded":false,"entries":{}},"is-redirect":{"isExpanded":false,"entries":{}},"is-relative":{"isExpanded":false,"entries":{}},"is-stream":{"isExpanded":false,"entries":{}},"is-typedarray":{"isExpanded":false,"entries":{}},"is-utf8":{"isExpanded":false,"entries":{}},"isarray":{"isExpanded":false,"entries":{}},"isemail":{"isExpanded":false,"entries":{}},"isexe":{"isExpanded":false,"entries":{}},"isobject":{"isExpanded":false,"entries":{}},"isstream":{"isExpanded":false,"entries":{}},"items":{"isExpanded":false,"entries":{}},"jade":{"isExpanded":false,"entries":{}},"jodid25519":{"isExpanded":false,"entries":{}},"joi":{"isExpanded":false,"entries":{}},"jquery":{"isExpanded":false,"entries":{}},"jquery.payment":{"isExpanded":false,"entries":{}},"jsbn":{"isExpanded":false,"entries":{}},"jsdom":{"isExpanded":false,"entries":{}},"json-schema":{"isExpanded":false,"entries":{}},"json-stable-stringify":{"isExpanded":false,"entries":{}},"json-stringify-safe":{"isExpanded":false,"entries":{}},"json5":{"isExpanded":false,"entries":{}},"jsonfile":{"isExpanded":false,"entries":{}},"jsonify":{"isExpanded":false,"entries":{}},"jsonparse":{"isExpanded":false,"entries":{}},"jsonpointer":{"isExpanded":false,"entries":{}},"JSONStream":{"isExpanded":false,"entries":{}},"jsprim":{"isExpanded":false,"entries":{}},"jstransform":{"isExpanded":false,"entries":{}},"kareem":{"isExpanded":false,"entries":{}},"kew":{"isExpanded":false,"entries":{}},"kind-of":{"isExpanded":false,"entries":{}},"labeled-stream-splicer":{"isExpanded":false,"entries":{}},"latest-version":{"isExpanded":false,"entries":{}},"lazy-cache":{"isExpanded":false,"entries":{}},"lcid":{"isExpanded":false,"entries":{}},"levn":{"isExpanded":false,"entries":{}},"lexical-scope":{"isExpanded":false,"entries":{}},"liftoff":{"isExpanded":false,"entries":{}},"load-json-file":{"isExpanded":false,"entries":{}},"lodash":{"isExpanded":false,"entries":{}},"lodash._baseassign":{"isExpanded":false,"entries":{}},"lodash._basecopy":{"isExpanded":false,"entries":{}},"lodash._baseisequal":{"isExpanded":false,"entries":{}},"lodash._basetostring":{"isExpanded":false,"entries":{}},"lodash._basevalues":{"isExpanded":false,"entries":{}},"lodash._bindcallback":{"isExpanded":false,"entries":{}},"lodash._createassigner":{"isExpanded":false,"entries":{}},"lodash._createpadding":{"isExpanded":false,"entries":{}},"lodash._escapehtmlchar":{"isExpanded":false,"entries":{}},"lodash._escapestringchar":{"isExpanded":false,"entries":{}},"lodash._getnative":{"isExpanded":false,"entries":{}},"lodash._htmlescapes":{"isExpanded":false,"entries":{}},"lodash._isiterateecall":{"isExpanded":false,"entries":{}},"lodash._isnative":{"isExpanded":false,"entries":{}},"lodash._objecttypes":{"isExpanded":false,"entries":{}},"lodash._reescape":{"isExpanded":false,"entries":{}},"lodash._reevaluate":{"isExpanded":false,"entries":{}},"lodash._reinterpolate":{"isExpanded":false,"entries":{}},"lodash._reunescapedhtml":{"isExpanded":false,"entries":{}},"lodash._root":{"isExpanded":false,"entries":{}},"lodash._shimkeys":{"isExpanded":false,"entries":{}},"lodash.assign":{"isExpanded":false,"entries":{}},"lodash.defaults":{"isExpanded":false,"entries":{}},"lodash.escape":{"isExpanded":false,"entries":{}},"lodash.isarguments":{"isExpanded":false,"entries":{}},"lodash.isarray":{"isExpanded":false,"entries":{}},"lodash.isequal":{"isExpanded":false,"entries":{}},"lodash.isobject":{"isExpanded":false,"entries":{}},"lodash.istypedarray":{"isExpanded":false,"entries":{}},"lodash.keys":{"isExpanded":false,"entries":{}},"lodash.memoize":{"isExpanded":false,"entries":{}},"lodash.pad":{"isExpanded":false,"entries":{}},"lodash.padleft":{"isExpanded":false,"entries":{}},"lodash.padright":{"isExpanded":false,"entries":{}},"lodash.repeat":{"isExpanded":false,"entries":{}},"lodash.restparam":{"isExpanded":false,"entries":{}},"lodash.template":{"isExpanded":false,"entries":{}},"lodash.templatesettings":{"isExpanded":false,"entries":{}},"lodash.values":{"isExpanded":false,"entries":{}},"longest":{"isExpanded":false,"entries":{}},"loud-rejection":{"isExpanded":false,"entries":{}},"lowercase-keys":{"isExpanded":false,"entries":{}},"lru-cache":{"isExpanded":false,"entries":{}},"map-obj":{"isExpanded":false,"entries":{}},"map-stream":{"isExpanded":false,"entries":{}},"markdown":{"isExpanded":false,"entries":{}},"md5":{"isExpanded":false,"entries":{}},"meow":{"isExpanded":false,"entries":{}},"methods":{"isExpanded":false,"entries":{}},"micromatch":{"isExpanded":false,"entries":{}},"miller-rabin":{"isExpanded":false,"entries":{}},"mime":{"isExpanded":false,"entries":{}},"mime-db":{"isExpanded":false,"entries":{}},"mime-types":{"isExpanded":false,"entries":{}},"minimalistic-assert":{"isExpanded":false,"entries":{}},"minimatch":{"isExpanded":false,"entries":{}},"minimist":{"isExpanded":false,"entries":{}},"mkdirp":{"isExpanded":false,"entries":{}},"mocha":{"isExpanded":false,"entries":{}},"module-deps":{"isExpanded":false,"entries":{}},"moment":{"isExpanded":false,"entries":{}},"moment-timezone":{"isExpanded":false,"entries":{}},"mongodb":{"isExpanded":false,"entries":{}},"mongodb-core":{"isExpanded":false,"entries":{}},"mongoose":{"isExpanded":false,"entries":{}},"mpath":{"isExpanded":false,"entries":{}},"mpromise":{"isExpanded":false,"entries":{}},"mquery":{"isExpanded":false,"entries":{}},"ms":{"isExpanded":false,"entries":{}},"multipipe":{"isExpanded":false,"entries":{}},"muri":{"isExpanded":false,"entries":{}},"nan":{"isExpanded":false,"entries":{}},"nested-error-stacks":{"isExpanded":false,"entries":{}},"newrelic":{"isExpanded":false,"entries":{}},"node-gyp":{"isExpanded":false,"entries":{}},"node-sass":{"isExpanded":false,"entries":{}},"node-uuid":{"isExpanded":false,"entries":{}},"nodemon":{"isExpanded":false,"entries":{}},"nopt":{"isExpanded":false,"entries":{}},"normalize-package-data":{"isExpanded":false,"entries":{}},"normalize-path":{"isExpanded":false,"entries":{}},"npmconf":{"isExpanded":false,"entries":{}},"npmlog":{"isExpanded":false,"entries":{}},"number-is-nan":{"isExpanded":false,"entries":{}},"nwmatcher":{"isExpanded":false,"entries":{}},"oauth-sign":{"isExpanded":false,"entries":{}},"object-assign":{"isExpanded":false,"entries":{}},"object-keys":{"isExpanded":false,"entries":{}},"object.omit":{"isExpanded":false,"entries":{}},"once":{"isExpanded":false,"entries":{}},"optimist":{"isExpanded":false,"entries":{}},"optionator":{"isExpanded":false,"entries":{}},"options":{"isExpanded":false,"entries":{}},"orchestrator":{"isExpanded":false,"entries":{}},"ordered-read-streams":{"isExpanded":false,"entries":{}},"original":{"isExpanded":false,"entries":{}},"os-browserify":{"isExpanded":false,"entries":{}},"os-homedir":{"isExpanded":false,"entries":{}},"os-locale":{"isExpanded":false,"entries":{}},"os-shim":{"isExpanded":false,"entries":{}},"os-tmpdir":{"isExpanded":false,"entries":{}},"osenv":{"isExpanded":false,"entries":{}},"package-json":{"isExpanded":false,"entries":{}},"pako":{"isExpanded":false,"entries":{}},"parents":{"isExpanded":false,"entries":{}},"parse-asn1":{"isExpanded":false,"entries":{}},"parse-code-context":{"isExpanded":false,"entries":{}},"parse-glob":{"isExpanded":false,"entries":{}},"parse-import":{"isExpanded":false,"entries":{}},"parse-json":{"isExpanded":false,"entries":{}},"parse5":{"isExpanded":false,"entries":{}},"path-array":{"isExpanded":false,"entries":{}},"path-browserify":{"isExpanded":false,"entries":{}},"path-exists":{"isExpanded":false,"entries":{}},"path-is-absolute":{"isExpanded":false,"entries":{}},"path-platform":{"isExpanded":false,"entries":{}},"path-type":{"isExpanded":false,"entries":{}},"pause-stream":{"isExpanded":false,"entries":{}},"pbkdf2":{"isExpanded":false,"entries":{}},"phantomjs":{"isExpanded":false,"entries":{}},"pify":{"isExpanded":false,"entries":{}},"pinkie":{"isExpanded":false,"entries":{}},"pinkie-promise":{"isExpanded":false,"entries":{}},"prelude-ls":{"isExpanded":false,"entries":{}},"prepend-http":{"isExpanded":false,"entries":{}},"preserve":{"isExpanded":false,"entries":{}},"pretty-hrtime":{"isExpanded":false,"entries":{}},"process":{"isExpanded":false,"entries":{}},"process-nextick-args":{"isExpanded":false,"entries":{}},"progress":{"isExpanded":false,"entries":{}},"proto-list":{"isExpanded":false,"entries":{}},"ps-tree":{"isExpanded":false,"entries":{}},"pseudomap":{"isExpanded":false,"entries":{}},"public-encrypt":{"isExpanded":false,"entries":{}},"punycode":{"isExpanded":false,"entries":{}},"qs":{"isExpanded":false,"entries":{}},"querystring":{"isExpanded":false,"entries":{}},"querystring-es3":{"isExpanded":false,"entries":{}},"querystringify":{"isExpanded":false,"entries":{}},"randomatic":{"isExpanded":false,"entries":{}},"randombytes":{"isExpanded":false,"entries":{}},"rc":{"isExpanded":false,"entries":{}},"read-all-stream":{"isExpanded":false,"entries":{}},"read-only-stream":{"isExpanded":false,"entries":{}},"read-pkg":{"isExpanded":false,"entries":{}},"read-pkg-up":{"isExpanded":false,"entries":{}},"readable-stream":{"isExpanded":false,"entries":{}},"readable-wrap":{"isExpanded":false,"entries":{}},"readdirp":{"isExpanded":false,"entries":{}},"rechoir":{"isExpanded":false,"entries":{}},"redent":{"isExpanded":false,"entries":{}},"reduce-component":{"isExpanded":false,"entries":{}},"regex-cache":{"isExpanded":false,"entries":{}},"regexp-clone":{"isExpanded":false,"entries":{}},"registry-url":{"isExpanded":false,"entries":{}},"repeat-element":{"isExpanded":false,"entries":{}},"repeat-string":{"isExpanded":false,"entries":{}},"repeating":{"isExpanded":false,"entries":{}},"replace-ext":{"isExpanded":false,"entries":{}},"request":{"isExpanded":false,"entries":{}},"request-progress":{"isExpanded":false,"entries":{}},"request-promise":{"isExpanded":false,"entries":{}},"requires-port":{"isExpanded":false,"entries":{}},"resolve":{"isExpanded":false,"entries":{}},"resolve-url":{"isExpanded":false,"entries":{}},"rework":{"isExpanded":false,"entries":{}},"rework-import":{"isExpanded":false,"entries":{}},"rework-plugin-function":{"isExpanded":false,"entries":{}},"rework-plugin-url":{"isExpanded":false,"entries":{}},"rework-visit":{"isExpanded":false,"entries":{}},"rfile":{"isExpanded":false,"entries":{}},"right-align":{"isExpanded":false,"entries":{}},"rimraf":{"isExpanded":false,"entries":{}},"ripemd160":{"isExpanded":false,"entries":{}},"ruglify":{"isExpanded":false,"entries":{}},"sass-graph":{"isExpanded":false,"entries":{}},"semver":{"isExpanded":false,"entries":{}},"semver-diff":{"isExpanded":false,"entries":{}},"sendgrid":{"isExpanded":false,"entries":{}},"sequencify":{"isExpanded":false,"entries":{}},"sha.js":{"isExpanded":false,"entries":{}},"shallow-copy":{"isExpanded":false,"entries":{}},"shasum":{"isExpanded":false,"entries":{}},"shell-quote":{"isExpanded":false,"entries":{}},"sigmund":{"isExpanded":false,"entries":{}},"signal-exit":{"isExpanded":false,"entries":{}},"sliced":{"isExpanded":false,"entries":{}},"slide":{"isExpanded":false,"entries":{}},"slm":{"isExpanded":false,"entries":{}},"smtpapi":{"isExpanded":false,"entries":{}},"sntp":{"isExpanded":false,"entries":{}},"source-map":{"isExpanded":false,"entries":{}},"source-map-resolve":{"isExpanded":false,"entries":{}},"source-map-url":{"isExpanded":false,"entries":{}},"sparkles":{"isExpanded":false,"entries":{}},"spawn-sync":{"isExpanded":false,"entries":{}},"spdx-correct":{"isExpanded":false,"entries":{}},"spdx-exceptions":{"isExpanded":false,"entries":{}},"spdx-expression-parse":{"isExpanded":false,"entries":{}},"spdx-license-ids":{"isExpanded":false,"entries":{}},"split":{"isExpanded":false,"entries":{}},"sshpk":{"isExpanded":false,"entries":{}},"stream-browserify":{"isExpanded":false,"entries":{}},"stream-combiner":{"isExpanded":false,"entries":{}},"stream-combiner2":{"isExpanded":false,"entries":{}},"stream-consume":{"isExpanded":false,"entries":{}},"stream-http":{"isExpanded":false,"entries":{}},"stream-splicer":{"isExpanded":false,"entries":{}},"string_decoder":{"isExpanded":false,"entries":{}},"string-length":{"isExpanded":false,"entries":{}},"string-width":{"isExpanded":false,"entries":{}},"stringstream":{"isExpanded":false,"entries":{}},"strip-ansi":{"isExpanded":false,"entries":{}},"strip-bom":{"isExpanded":false,"entries":{}},"strip-comments":{"isExpanded":true,"entries":{}},"strip-indent":{"isExpanded":false,"entries":{}},"strip-json-comments":{"isExpanded":false,"entries":{}},"stripe":{"isExpanded":false,"entries":{}},"subarg":{"isExpanded":false,"entries":{}},"superagent":{"isExpanded":false,"entries":{}},"supertest":{"isExpanded":false,"entries":{}},"supports-color":{"isExpanded":false,"entries":{}},"syntax-error":{"isExpanded":false,"entries":{}},"tar":{"isExpanded":false,"entries":{}},"throttleit":{"isExpanded":false,"entries":{}},"through":{"isExpanded":false,"entries":{}},"through2":{"isExpanded":false,"entries":{}},"tildify":{"isExpanded":false,"entries":{}},"time-stamp":{"isExpanded":false,"entries":{}},"timed-out":{"isExpanded":false,"entries":{}},"timers-browserify":{"isExpanded":false,"entries":{}},"topo":{"isExpanded":false,"entries":{}},"touch":{"isExpanded":false,"entries":{}},"tough-cookie":{"isExpanded":false,"entries":{}},"traverse":{"isExpanded":false,"entries":{}},"trim-newlines":{"isExpanded":false,"entries":{}},"tty-browserify":{"isExpanded":false,"entries":{}},"tunnel-agent":{"isExpanded":false,"entries":{}},"tweetnacl":{"isExpanded":false,"entries":{}},"type-check":{"isExpanded":false,"entries":{}},"type-detect":{"isExpanded":false,"entries":{}},"typedarray":{"isExpanded":false,"entries":{}},"uglify-js":{"isExpanded":false,"entries":{}},"uglify-save-license":{"isExpanded":false,"entries":{}},"uglify-to-browserify":{"isExpanded":false,"entries":{}},"uid-number":{"isExpanded":false,"entries":{}},"ultron":{"isExpanded":false,"entries":{}},"umd":{"isExpanded":false,"entries":{}},"undefsafe":{"isExpanded":false,"entries":{}},"unique-stream":{"isExpanded":false,"entries":{}},"update-notifier":{"isExpanded":false,"entries":{}},"urix":{"isExpanded":false,"entries":{}},"url":{"isExpanded":false,"entries":{}},"url-parse":{"isExpanded":false,"entries":{}},"url-regex":{"isExpanded":false,"entries":{}},"user-home":{"isExpanded":false,"entries":{}},"utf-8-validate":{"isExpanded":false,"entries":{}},"util":{"isExpanded":false,"entries":{}},"util-deprecate":{"isExpanded":false,"entries":{}},"uuid":{"isExpanded":false,"entries":{}},"v8flags":{"isExpanded":false,"entries":{}},"validate-npm-package-license":{"isExpanded":false,"entries":{}},"verror":{"isExpanded":false,"entries":{}},"vinyl":{"isExpanded":false,"entries":{}},"vinyl-fs":{"isExpanded":false,"entries":{}},"vinyl-sourcemaps-apply":{"isExpanded":false,"entries":{}},"vm-browserify":{"isExpanded":false,"entries":{}},"which":{"isExpanded":false,"entries":{}},"window-size":{"isExpanded":false,"entries":{}},"wordwrap":{"isExpanded":false,"entries":{}},"wrap-ansi":{"isExpanded":false,"entries":{}},"wrappy":{"isExpanded":false,"entries":{}},"wreck":{"isExpanded":false,"entries":{}},"write-file-atomic":{"isExpanded":false,"entries":{}},"ws":{"isExpanded":false,"entries":{}},"xdg-basedir":{"isExpanded":false,"entries":{}},"xml-name-validator":{"isExpanded":false,"entries":{}},"xmlhttprequest":{"isExpanded":false,"entries":{}},"xtend":{"isExpanded":false,"entries":{}},"y18n":{"isExpanded":false,"entries":{}},"yallist":{"isExpanded":false,"entries":{}},"yargs":{"isExpanded":false,"entries":{}},"zombie":{"isExpanded":false,"entries":{}},"cr":{"isExpanded":false,"entries":{}},"export-files":{"isExpanded":false,"entries":{}},"noncharacters":{"isExpanded":false,"entries":{}},"quoted-string-regex":{"isExpanded":false,"entries":{}},"strip-bom-string":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/andy/Documents/production/codesmith-public-site/node_modules/package-json","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":3604,"width":200}},"fullScreen":false}