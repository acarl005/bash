{"version":1,"windowDimensions":{"x":65,"y":24,"width":1855,"height":1056,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/home/andy/Documents/codesmith/assessments-archive"],"buffers":[{"id":"6ac3fd91fa6b44646ea0a30405877158","text":"\ncasper.test.begin('sudoku UI', function(test) {\n\n  // casper.on('remote.message', function(message) {\n  //   this.echo(message);\n  // });\n\n  // casper.on(\"page.error\", function(msg, trace) {\n  //   this.echo(\"Error: \" + msg, \"ERROR\");\n  // });\n\n  casper.start('http://localhost:3000');\n\n  casper.then(function() {\n    test.assertHttpStatus(200, 'loads home page');\n    casper.thenOpen('http://localhost:3000/main.js');\n  });\n\n  casper.then(function() {\n    test.assertHttpStatus(200, 'loads main.js');\n    casper.thenOpen('http://localhost:3000/style.css');\n  });\n\n  casper.then(function() {\n    test.assertHttpStatus(200, 'loads style.css');\n    casper.thenOpen('http://localhost:3000/');\n  });\n\n  casper.then(function() {\n    test.assertElementCount('.box input', 81, 'The grid is there.');\n    test.assertElementCount('input[data-row=\"0\"]', 9, 'Row is set properly');\n    test.assertElementCount('input[data-column=\"4\"]', 9, 'Column is set properly');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=---26-7-168--7--9-19---45--82-1---4---46-29---5---3-28--93---74-4--5--367-3-18---');\n  });\n\n  casper.then(function() {\n    test.assertElementCount('.box input', 81, 'The grid is still there.');\n    var boxes = casper.evaluate(function() {\n      var inputs = __utils__.findAll('.box input');\n      return [].map.call(inputs, function(elem) {\n        return elem.value;\n      });\n    });\n    var answer = [\"\", \"\", \"\", \"6\", \"8\", \"\", \"1\", \"9\", \"\", \"2\", \"6\", \"\", \"\", \"7\", \"\", \"\", \"\", \"4\", \"7\", \"\", \"1\", \"\", \"9\", \"\", \"5\", \"\", \"\", \"8\", \"2\", \"\", \"\", \"\", \"4\", \"\", \"5\", \"\", \"1\", \"\", \"\", \"6\", \"\", \"2\", \"\", \"\", \"3\", \"\", \"4\", \"\", \"9\", \"\", \"\", \"\", \"2\", \"8\", \"\", \"\", \"9\", \"\", \"4\", \"\", \"7\", \"\", \"3\", \"3\", \"\", \"\", \"\", \"5\", \"\", \"\", \"1\", \"8\", \"\", \"7\", \"4\", \"\", \"3\", \"6\", \"\", \"\", \"\"];\n    test.assertEquals(boxes, answer, \"The board is getting populated from the query string\");\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/puzzle/17');\n  });\n\n  casper.then(function() {\n    test.assertElementCount('.box input', 81, 'The grid is still there.');\n    test.assertUrlMatch(/http:\\/\\/localhost:3000\\/\\?board=[\\d\\-]{81}/, 'should redirect from /puzzle/17 to one of the puzzles');\n    test.assertUrlMatch('http://localhost:3000/?board=-5-8-7-2-6---1--9-7-254---6-7--2-3-15-4---9-81-3-8--7-9---762-5-6--9---3-8-1-3-4-', 'should redirect from /puzzle/17 to the 17th puzzle in the file');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=435269781682571493197834562826195347374682915951743628519326874248957136763418259');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.win', 'Winner message should appear');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=435269781682571493197834562826195347734682915951743628519326874248957136763418259');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.lose', 'Loser message should appear when a column repeats a number');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=435269781682571493197834562826195347374682915951743628519326874248957139763418256');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.lose', 'Loser message should appear when a row repeats a number');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=4-5269781682571493197834562826195347374682915951743628519326874248957136763418259');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.lose', 'Loser message should appear when a cell is blank');\n  });\n\n  casper.run(function() {\n    test.done();\n  });\n\n});\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":3,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[7,0]],"newRange":[[0,0],[0,0]],"oldText":"<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[0,0]],"newRange":[[0,0],[101,0]],"oldText":"","newText":"\ncasper.test.begin('sudoku UI', function(test) {\n\n  // casper.on('remote.message', function(message) {\n  //   this.echo(message);\n  // });\n\n  // casper.on(\"page.error\", function(msg, trace) {\n  //   this.echo(\"Error: \" + msg, \"ERROR\");\n  // });\n\n  casper.start('http://localhost:3000');\n\n  casper.then(function() {\n    test.assertHttpStatus(200, 'loads home page');\n    casper.thenOpen('http://localhost:3000/main.js');\n  });\n\n  casper.then(function() {\n    test.assertHttpStatus(200, 'loads main.js');\n    casper.thenOpen('http://localhost:3000/style.css');\n  });\n\n  casper.then(function() {\n    test.assertHttpStatus(200, 'loads style.css');\n    casper.thenOpen('http://localhost:3000/');\n  });\n\n  casper.then(function() {\n    test.assertElementCount('.box input', 81, 'The grid is there.');\n    test.assertElementCount('input[data-row=\"0\"]', 9, 'Row is set properly');\n    test.assertElementCount('input[data-column=\"4\"]', 9, 'Column is set properly');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=---26-7-168--7--9-19---45--82-1---4---46-29---5---3-28--93---74-4--5--367-3-18---');\n  });\n\n  casper.then(function() {\n    test.assertElementCount('.box input', 81, 'The grid is still there.');\n    var boxes = casper.evaluate(function() {\n      var inputs = __utils__.findAll('.box input');\n      return [].map.call(inputs, function(elem) {\n        return elem.value;\n      });\n    });\n    var answer = [\"\", \"\", \"\", \"6\", \"8\", \"\", \"1\", \"9\", \"\", \"2\", \"6\", \"\", \"\", \"7\", \"\", \"\", \"\", \"4\", \"7\", \"\", \"1\", \"\", \"9\", \"\", \"5\", \"\", \"\", \"8\", \"2\", \"\", \"\", \"\", \"4\", \"\", \"5\", \"\", \"1\", \"\", \"\", \"6\", \"\", \"2\", \"\", \"\", \"3\", \"\", \"4\", \"\", \"9\", \"\", \"\", \"\", \"2\", \"8\", \"\", \"\", \"9\", \"\", \"4\", \"\", \"7\", \"\", \"3\", \"3\", \"\", \"\", \"\", \"5\", \"\", \"\", \"1\", \"8\", \"\", \"7\", \"4\", \"\", \"3\", \"6\", \"\", \"\", \"\"];\n    test.assertEquals(boxes, answer, \"The board is getting populated from the query string\");\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/puzzle/17');\n  });\n\n  casper.then(function() {\n    test.assertElementCount('.box input', 81, 'The grid is still there.');\n    test.assertUrlMatch(/http:\\/\\/localhost:3000\\/\\?board=[\\d\\-]{81}/, 'should redirect from /puzzle/17 to one of the puzzles');\n    test.assertUrlMatch('http://localhost:3000/?board=-5-8-7-2-6---1--9-7-254---6-7--2-3-15-4---9-81-3-8--7-9---762-5-6--9---3-8-1-3-4-', 'should redirect from /puzzle/17 to the 17th puzzle in the file');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=435269781682571493197834562826195347374682915951743628519326874248957136763418259');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.win', 'Winner message should appear');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=435269781682571493197834562826195347734682915951743628519326874248957136763418259');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.lose', 'Loser message should appear when a column repeats a number');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=435269781682571493197834562826195347374682915951743628519326874248957139763418256');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.lose', 'Loser message should appear when a row repeats a number');\n  });\n\n  casper.then(function() {\n    casper.thenOpen('http://localhost:3000/?board=4-5269781682571493197834562826195347374682915951743628519326874248957136763418259');\n  });\n\n  casper.then(function() {\n    this.click('#validate');\n    test.assertExists('h1.lose', 'Loser message should appear when a cell is blank');\n  });\n\n  casper.run(function() {\n    test.done();\n  });\n\n});\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[101,0],[101,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/codesmith/assessments-archive/test/recruitment-assessment-sudoku.js","digestWhenLastPersisted":"d3b50a7135ef4087c2b2bf4a0f1be2b1767782c8","preferredLineEnding":null,"nextMarkerId":4,"deserializer":"TextBuffer","version":5},{"id":"eda66e6fd08d2048e798eb82492316e6","text":"require('babel-register')({\n  presets: ['es2015'],\n});\n\nconst expect = require('expect');\n// const fs = require('fs');\n\nconst assessmentFunctions = require('../main');\n\n\ndescribe('capitalizeVowels', () => {\n  it('handles empty string cleanly', () => {\n    expect(assessmentFunctions.capitalizeVowels('')).toEqual('');\n  });\n\n  it('handles beginning vowel', () => {\n    expect(assessmentFunctions.capitalizeVowels('art')).toEqual('Art');\n  });\n\n  it('handles end vowel', () => {\n    expect(assessmentFunctions.capitalizeVowels('bro')).toEqual('brO');\n  });\n\n  it('handles many vowels', () => {\n    expect(assessmentFunctions.capitalizeVowels('david was here')).toEqual('dAvId wAs hErE');\n  });\n\n  it('handles no vowels', () => {\n    expect(assessmentFunctions.capitalizeVowels('bcdfghjklmnpqrstvwxyz1234567890'))\n      .toEqual('bcdfghjklmnpqrstvwxyz1234567890');\n  });\n});\n\ndescribe('reverseChunk', () => {\n  it('handles empty array cleanly', () => {\n    expect(assessmentFunctions.reverseChunk([], 0, 0)).toEqual([]);\n  });\n\n  it('reverses entire array', () => {\n    expect(assessmentFunctions.reverseChunk([1, 2, 3], 0, 2)).toEqual([3, 2, 1]);\n  });\n\n  it('reverses part of array', () => {\n    expect(assessmentFunctions.reverseChunk([1, 2, 3, 4, 5], 1, 3)).toEqual([1, 4, 3, 2, 5]);\n    expect(assessmentFunctions.reverseChunk([1, 2, 3, 4, 5], 2, 4)).toEqual([1, 2, 5, 4, 3]);\n  });\n\n  it('reverses entire array if indexes out of bounds', () => {\n    expect(assessmentFunctions.reverseChunk([1, 2, 3, 4, 5], -1, 5)).toEqual([5, 4, 3, 2, 1]);\n  });\n});\n\ndescribe('snakeToCamel', () => {\n  it('does nothing to string with no underscores', () => {\n    expect(assessmentFunctions.snakeToCamel('eran hammer')).toEqual('eran hammer');\n  });\n\n  it('properly snake cases with one underscore', () => {\n    expect(assessmentFunctions.snakeToCamel('mike_jackson')).toEqual('mikeJackson');\n  });\n\n  it('properly snake cases with multiple underscores', () => {\n    expect(assessmentFunctions.snakeToCamel('mike_jackson_wrote_our_assertion_library'))\n      .toEqual('mikeJacksonWroteOurAssertionLibrary');\n  });\n\n  it('gracefully handles underscore on end and beginning', () => {\n    expect(assessmentFunctions.snakeToCamel('_wow_underscores_')).toEqual('WowUnderscores');\n  });\n});\n\ndescribe('objToSortedArray', () => {\n  it('returns empty Array when given empty object', () => {\n    expect(assessmentFunctions.objToSortedArray({})).toEqual([]);\n  });\n\n  it('returns Array with one nested key-value Array', () => {\n    const obj = { david: 'petri' };\n    const res = [['david', 'petri']];\n\n    expect(assessmentFunctions.objToSortedArray(obj)).toEqual(res);\n  });\n\n  it('returns correct nested array when keys presorted', () => {\n    const obj = { andrew: 'carlson', david: 'petri', victoria: 'leon' };\n    const res = [['andrew', 'carlson'], ['david', 'petri'], ['victoria', 'leon']];\n\n    expect(assessmentFunctions.objToSortedArray(obj)).toEqual(res);\n  });\n\n  it('returns correct nested array when keys not presorted', () => {\n    const obj = { david: 'petri', victoria: 'leon', andrew: 'carlson', susan: 'tashiro' };\n    const res = [\n      ['andrew', 'carlson'],\n      ['david', 'petri'],\n      ['susan', 'tashiro'],\n      ['victoria', 'leon'],\n    ];\n\n    expect(assessmentFunctions.objToSortedArray(obj)).toEqual(res);\n  });\n});\n\ndescribe('html', () => {\n\n  // before(() => {\n  //   var html = fs.readFileSync(`__dirname/`)\n  // });\n\n});\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/codesmith/assessments-archive/test/precourse-assessment.js","digestWhenLastPersisted":"59a1ae0f9f9ac58640c063885498d50d7fab0aa8","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"fcfd31f199832b2d1fd263a7c65f0032","text":"{\n  \"name\": \"assessments-archive\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Codesmith LLC Assessments Archive\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"remote-test\": \"node test/remote-test.js\",\n    \"report\": \"node test/report.js\",\n    \"test\": \"npm run remote-test\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/CodesmithLLC/assessments-archive.git\"\n  },\n  \"author\": \"David Petri <petridw@gmail.com> (davidpetri.com)\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/CodesmithLLC/assessments-archive/issues\"\n  },\n  \"homepage\": \"https://github.com/CodesmithLLC/assessments-archive#readme\",\n  \"dependencies\": {\n    \"async\": \"^1.5.2\",\n    \"aws-sdk\": \"^2.2.35\",\n    \"babel-eslint\": \"^4.1.8\",\n    \"babel-preset-es2015\": \"^6.5.0\",\n    \"babel-preset-react\": \"^6.5.0\",\n    \"babel-register\": \"^6.5.2\",\n    \"eslint\": \"^1.10.3\",\n    \"eslint-config-airbnb\": \"^5.0.0\",\n    \"eslint-json\": \"^1.0.0\",\n    \"eslint-plugin-react\": \"^3.16.1\",\n    \"expect\": \"^1.14.0\",\n    \"mocha\": \"^2.4.5\",\n    \"mocha-email-reporter\": \"^1.0.2\",\n    \"request\": \"^2.69.0\",\n    \"sendgrid\": \"^2.0.0\",\n    \"supertest\": \"^1.2.0\"\n  }\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"4":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"5":{"range":{"start":{"row":41,"column":0},"end":{"row":41,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"3":{"id":"3","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":6,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/andy/Documents/codesmith/assessments-archive/package.json","digestWhenLastPersisted":"89289854914f9583595062afe1932b4ab2a2ed17","preferredLineEnding":null,"nextMarkerId":6,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/codesmith/assessments-archive/test/recruitment-assessment-sudoku.js","bufferId":"6ac3fd91fa6b44646ea0a30405877158","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":12,"softTabs":true,"firstVisibleScreenRow":12,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":13,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/codesmith/assessments-archive/package.json","bufferId":"fcfd31f199832b2d1fd263a7c65f0032","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/andy/Documents/codesmith/assessments-archive/test/precourse-assessment.js","bufferId":"eda66e6fd08d2048e798eb82492316e6","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/home/andy/Documents/codesmith/assessments-archive/package.json","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-javascript","language-json","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-02-23T02:53:47.858Z","version":"1.0.1","markersVersion":"1.0.5","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/home/andy/Documents/codesmith/assessments-archive/test/recruitment-assessment-sudoku.js","colorMarkers":[]},"8":{"id":8,"path":"/home/andy/Documents/codesmith/assessments-archive/test/precourse-assessment.js","colorMarkers":[]},"12":{"id":12,"path":"/home/andy/Documents/codesmith/assessments-archive/package.json","colorMarkers":[]}},"paths":[],"variables":{"deserializer":"VariablesCollection","content":[]}}},"fuzzy-finder":{"/home/andy/Documents/codesmith/assessments-archive/test/recruitment-assessment-sudoku.js":1456195841046,"/home/andy/Documents/codesmith/assessments-archive/package.json":1456195889471,"/home/andy/Documents/codesmith/assessments-archive/test/precourse-assessment.js":1456195840513},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/home/andy/Documents/codesmith/assessments-archive":{"isExpanded":true,"entries":{"scripts":{"isExpanded":false,"entries":{}},"solutions":{"isExpanded":false,"entries":{}},"test":{"isExpanded":true,"entries":{"util":{"isExpanded":false,"entries":{}}}}}}},"selectedPath":"/home/andy/Documents/codesmith/assessments-archive/package.json","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}